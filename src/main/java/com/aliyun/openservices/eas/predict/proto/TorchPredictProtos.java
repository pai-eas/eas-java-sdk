// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: pytorch_predict.proto

package com.aliyun.openservices.eas.predict.proto;

public final class TorchPredictProtos {
  private TorchPredictProtos() {}
  public static void registerAllExtensions(
          shade.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
          shade.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
            (shade.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * Protobuf enum {@code pytorch.eas.ArrayDataType}
   */
  public enum ArrayDataType
          implements shade.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * Not a legal value for DataType. Used to indicate a DataType field
     * has not been set.
     * </pre>
     *
     * <code>DT_INVALID = 0;</code>
     */
    DT_INVALID(0),
    /**
     * <pre>
     * Data types that all computation devices are expected to be
     * capable to support.
     * </pre>
     *
     * <code>DT_FLOAT = 1;</code>
     */
    DT_FLOAT(1),
    /**
     * <code>DT_DOUBLE = 2;</code>
     */
    DT_DOUBLE(2),
    /**
     * <code>DT_INT32 = 3;</code>
     */
    DT_INT32(3),
    /**
     * <code>DT_UINT8 = 4;</code>
     */
    DT_UINT8(4),
    /**
     * <code>DT_INT16 = 5;</code>
     */
    DT_INT16(5),
    /**
     * <code>DT_INT8 = 6;</code>
     */
    DT_INT8(6),
    /**
     * <code>DT_STRING = 7;</code>
     */
    DT_STRING(7),
    /**
     * <pre>
     * Single-precision complex
     * </pre>
     *
     * <code>DT_COMPLEX64 = 8;</code>
     */
    DT_COMPLEX64(8),
    /**
     * <code>DT_INT64 = 9;</code>
     */
    DT_INT64(9),
    /**
     * <code>DT_BOOL = 10;</code>
     */
    DT_BOOL(10),
    /**
     * <pre>
     * Quantized int8
     * </pre>
     *
     * <code>DT_QINT8 = 11;</code>
     */
    DT_QINT8(11),
    /**
     * <pre>
     * Quantized uint8
     * </pre>
     *
     * <code>DT_QUINT8 = 12;</code>
     */
    DT_QUINT8(12),
    /**
     * <pre>
     * Quantized int32
     * </pre>
     *
     * <code>DT_QINT32 = 13;</code>
     */
    DT_QINT32(13),
    /**
     * <pre>
     * Float32 truncated to 16 bits.  Only for cast ops.
     * </pre>
     *
     * <code>DT_BFLOAT16 = 14;</code>
     */
    DT_BFLOAT16(14),
    /**
     * <pre>
     * Quantized int16
     * </pre>
     *
     * <code>DT_QINT16 = 15;</code>
     */
    DT_QINT16(15),
    /**
     * <pre>
     * Quantized uint16
     * </pre>
     *
     * <code>DT_QUINT16 = 16;</code>
     */
    DT_QUINT16(16),
    /**
     * <code>DT_UINT16 = 17;</code>
     */
    DT_UINT16(17),
    /**
     * <pre>
     * Double-precision complex
     * </pre>
     *
     * <code>DT_COMPLEX128 = 18;</code>
     */
    DT_COMPLEX128(18),
    /**
     * <code>DT_HALF = 19;</code>
     */
    DT_HALF(19),
    /**
     * <code>DT_RESOURCE = 20;</code>
     */
    DT_RESOURCE(20),
    /**
     * <pre>
     * Arbitrary C++ data types
     * </pre>
     *
     * <code>DT_VARIANT = 21;</code>
     */
    DT_VARIANT(21),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * Not a legal value for DataType. Used to indicate a DataType field
     * has not been set.
     * </pre>
     *
     * <code>DT_INVALID = 0;</code>
     */
    public static final int DT_INVALID_VALUE = 0;
    /**
     * <pre>
     * Data types that all computation devices are expected to be
     * capable to support.
     * </pre>
     *
     * <code>DT_FLOAT = 1;</code>
     */
    public static final int DT_FLOAT_VALUE = 1;
    /**
     * <code>DT_DOUBLE = 2;</code>
     */
    public static final int DT_DOUBLE_VALUE = 2;
    /**
     * <code>DT_INT32 = 3;</code>
     */
    public static final int DT_INT32_VALUE = 3;
    /**
     * <code>DT_UINT8 = 4;</code>
     */
    public static final int DT_UINT8_VALUE = 4;
    /**
     * <code>DT_INT16 = 5;</code>
     */
    public static final int DT_INT16_VALUE = 5;
    /**
     * <code>DT_INT8 = 6;</code>
     */
    public static final int DT_INT8_VALUE = 6;
    /**
     * <code>DT_STRING = 7;</code>
     */
    public static final int DT_STRING_VALUE = 7;
    /**
     * <pre>
     * Single-precision complex
     * </pre>
     *
     * <code>DT_COMPLEX64 = 8;</code>
     */
    public static final int DT_COMPLEX64_VALUE = 8;
    /**
     * <code>DT_INT64 = 9;</code>
     */
    public static final int DT_INT64_VALUE = 9;
    /**
     * <code>DT_BOOL = 10;</code>
     */
    public static final int DT_BOOL_VALUE = 10;
    /**
     * <pre>
     * Quantized int8
     * </pre>
     *
     * <code>DT_QINT8 = 11;</code>
     */
    public static final int DT_QINT8_VALUE = 11;
    /**
     * <pre>
     * Quantized uint8
     * </pre>
     *
     * <code>DT_QUINT8 = 12;</code>
     */
    public static final int DT_QUINT8_VALUE = 12;
    /**
     * <pre>
     * Quantized int32
     * </pre>
     *
     * <code>DT_QINT32 = 13;</code>
     */
    public static final int DT_QINT32_VALUE = 13;
    /**
     * <pre>
     * Float32 truncated to 16 bits.  Only for cast ops.
     * </pre>
     *
     * <code>DT_BFLOAT16 = 14;</code>
     */
    public static final int DT_BFLOAT16_VALUE = 14;
    /**
     * <pre>
     * Quantized int16
     * </pre>
     *
     * <code>DT_QINT16 = 15;</code>
     */
    public static final int DT_QINT16_VALUE = 15;
    /**
     * <pre>
     * Quantized uint16
     * </pre>
     *
     * <code>DT_QUINT16 = 16;</code>
     */
    public static final int DT_QUINT16_VALUE = 16;
    /**
     * <code>DT_UINT16 = 17;</code>
     */
    public static final int DT_UINT16_VALUE = 17;
    /**
     * <pre>
     * Double-precision complex
     * </pre>
     *
     * <code>DT_COMPLEX128 = 18;</code>
     */
    public static final int DT_COMPLEX128_VALUE = 18;
    /**
     * <code>DT_HALF = 19;</code>
     */
    public static final int DT_HALF_VALUE = 19;
    /**
     * <code>DT_RESOURCE = 20;</code>
     */
    public static final int DT_RESOURCE_VALUE = 20;
    /**
     * <pre>
     * Arbitrary C++ data types
     * </pre>
     *
     * <code>DT_VARIANT = 21;</code>
     */
    public static final int DT_VARIANT_VALUE = 21;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
                "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ArrayDataType valueOf(int value) {
      return forNumber(value);
    }

    public static ArrayDataType forNumber(int value) {
      switch (value) {
        case 0: return DT_INVALID;
        case 1: return DT_FLOAT;
        case 2: return DT_DOUBLE;
        case 3: return DT_INT32;
        case 4: return DT_UINT8;
        case 5: return DT_INT16;
        case 6: return DT_INT8;
        case 7: return DT_STRING;
        case 8: return DT_COMPLEX64;
        case 9: return DT_INT64;
        case 10: return DT_BOOL;
        case 11: return DT_QINT8;
        case 12: return DT_QUINT8;
        case 13: return DT_QINT32;
        case 14: return DT_BFLOAT16;
        case 15: return DT_QINT16;
        case 16: return DT_QUINT16;
        case 17: return DT_UINT16;
        case 18: return DT_COMPLEX128;
        case 19: return DT_HALF;
        case 20: return DT_RESOURCE;
        case 21: return DT_VARIANT;
        default: return null;
      }
    }

    public static shade.protobuf.Internal.EnumLiteMap<ArrayDataType>
    internalGetValueMap() {
      return internalValueMap;
    }
    private static final shade.protobuf.Internal.EnumLiteMap<
            ArrayDataType> internalValueMap =
            new shade.protobuf.Internal.EnumLiteMap<ArrayDataType>() {
              public ArrayDataType findValueByNumber(int number) {
                return ArrayDataType.forNumber(number);
              }
            };

    public final shade.protobuf.Descriptors.EnumValueDescriptor
    getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final shade.protobuf.Descriptors.EnumDescriptor
    getDescriptorForType() {
      return getDescriptor();
    }
    public static final shade.protobuf.Descriptors.EnumDescriptor
    getDescriptor() {
      return com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.getDescriptor().getEnumTypes().get(0);
    }

    private static final ArrayDataType[] VALUES = values();

    public static ArrayDataType valueOf(
            shade.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
                "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ArrayDataType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:pytorch.eas.ArrayDataType)
  }

  public interface ArrayShapeOrBuilder extends
          // @@protoc_insertion_point(interface_extends:pytorch.eas.ArrayShape)
          shade.protobuf.MessageOrBuilder {

    /**
     * <code>repeated int64 dim = 1 [packed = true];</code>
     */
    java.util.List<java.lang.Long> getDimList();
    /**
     * <code>repeated int64 dim = 1 [packed = true];</code>
     */
    int getDimCount();
    /**
     * <code>repeated int64 dim = 1 [packed = true];</code>
     */
    long getDim(int index);
  }
  /**
   * <pre>
   * Dimensions of an array
   * </pre>
   *
   * Protobuf type {@code pytorch.eas.ArrayShape}
   */
  public  static final class ArrayShape extends
          shade.protobuf.GeneratedMessageV3 implements
          // @@protoc_insertion_point(message_implements:pytorch.eas.ArrayShape)
          ArrayShapeOrBuilder {
    private static final long serialVersionUID = 0L;
    // Use ArrayShape.newBuilder() to construct.
    private ArrayShape(shade.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ArrayShape() {
      dim_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final shade.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ArrayShape(
            shade.protobuf.CodedInputStream input,
            shade.protobuf.ExtensionRegistryLite extensionRegistry)
            throws shade.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      shade.protobuf.UnknownFieldSet.Builder unknownFields =
              shade.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                dim_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000001;
              }
              dim_.add(input.readInt64());
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001) && input.getBytesUntilLimit() > 0) {
                dim_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                dim_.add(input.readInt64());
              }
              input.popLimit(limit);
              break;
            }
            default: {
              if (!parseUnknownFieldProto3(
                      input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (shade.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new shade.protobuf.InvalidProtocolBufferException(
                e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          dim_ = java.util.Collections.unmodifiableList(dim_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final shade.protobuf.Descriptors.Descriptor
    getDescriptor() {
      return com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.internal_static_pytorch_eas_ArrayShape_descriptor;
    }

    @java.lang.Override
    protected shade.protobuf.GeneratedMessageV3.FieldAccessorTable
    internalGetFieldAccessorTable() {
      return com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.internal_static_pytorch_eas_ArrayShape_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                      com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayShape.class, com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayShape.Builder.class);
    }

    public static final int DIM_FIELD_NUMBER = 1;
    private java.util.List<java.lang.Long> dim_;
    /**
     * <code>repeated int64 dim = 1 [packed = true];</code>
     */
    public java.util.List<java.lang.Long>
    getDimList() {
      return dim_;
    }
    /**
     * <code>repeated int64 dim = 1 [packed = true];</code>
     */
    public int getDimCount() {
      return dim_.size();
    }
    /**
     * <code>repeated int64 dim = 1 [packed = true];</code>
     */
    public long getDim(int index) {
      return dim_.get(index);
    }
    private int dimMemoizedSerializedSize = -1;

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(shade.protobuf.CodedOutputStream output)
            throws java.io.IOException {
      getSerializedSize();
      if (getDimList().size() > 0) {
        output.writeUInt32NoTag(10);
        output.writeUInt32NoTag(dimMemoizedSerializedSize);
      }
      for (int i = 0; i < dim_.size(); i++) {
        output.writeInt64NoTag(dim_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < dim_.size(); i++) {
          dataSize += shade.protobuf.CodedOutputStream
                  .computeInt64SizeNoTag(dim_.get(i));
        }
        size += dataSize;
        if (!getDimList().isEmpty()) {
          size += 1;
          size += shade.protobuf.CodedOutputStream
                  .computeInt32SizeNoTag(dataSize);
        }
        dimMemoizedSerializedSize = dataSize;
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
        return true;
      }
      if (!(obj instanceof com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayShape)) {
        return super.equals(obj);
      }
      com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayShape other = (com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayShape) obj;

      boolean result = true;
      result = result && getDimList()
              .equals(other.getDimList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getDimCount() > 0) {
        hash = (37 * hash) + DIM_FIELD_NUMBER;
        hash = (53 * hash) + getDimList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayShape parseFrom(
            java.nio.ByteBuffer data)
            throws shade.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayShape parseFrom(
            java.nio.ByteBuffer data,
            shade.protobuf.ExtensionRegistryLite extensionRegistry)
            throws shade.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayShape parseFrom(
            shade.protobuf.ByteString data)
            throws shade.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayShape parseFrom(
            shade.protobuf.ByteString data,
            shade.protobuf.ExtensionRegistryLite extensionRegistry)
            throws shade.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayShape parseFrom(byte[] data)
            throws shade.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayShape parseFrom(
            byte[] data,
            shade.protobuf.ExtensionRegistryLite extensionRegistry)
            throws shade.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayShape parseFrom(java.io.InputStream input)
            throws java.io.IOException {
      return shade.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
    }
    public static com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayShape parseFrom(
            java.io.InputStream input,
            shade.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return shade.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayShape parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
      return shade.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayShape parseDelimitedFrom(
            java.io.InputStream input,
            shade.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return shade.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayShape parseFrom(
            shade.protobuf.CodedInputStream input)
            throws java.io.IOException {
      return shade.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
    }
    public static com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayShape parseFrom(
            shade.protobuf.CodedInputStream input,
            shade.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return shade.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayShape prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
              ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
            shade.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Dimensions of an array
     * </pre>
     *
     * Protobuf type {@code pytorch.eas.ArrayShape}
     */
    public static final class Builder extends
            shade.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:pytorch.eas.ArrayShape)
            com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayShapeOrBuilder {
      public static final shade.protobuf.Descriptors.Descriptor
      getDescriptor() {
        return com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.internal_static_pytorch_eas_ArrayShape_descriptor;
      }

      @java.lang.Override
      protected shade.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
        return com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.internal_static_pytorch_eas_ArrayShape_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                        com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayShape.class, com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayShape.Builder.class);
      }

      // Construct using com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayShape.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
              shade.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (shade.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        dim_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      @java.lang.Override
      public shade.protobuf.Descriptors.Descriptor
      getDescriptorForType() {
        return com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.internal_static_pytorch_eas_ArrayShape_descriptor;
      }

      @java.lang.Override
      public com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayShape getDefaultInstanceForType() {
        return com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayShape.getDefaultInstance();
      }

      @java.lang.Override
      public com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayShape build() {
        com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayShape result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayShape buildPartial() {
        com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayShape result = new com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayShape(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          dim_ = java.util.Collections.unmodifiableList(dim_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.dim_ = dim_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
              shade.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
              shade.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
              shade.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
              shade.protobuf.Descriptors.FieldDescriptor field,
              int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
              shade.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(shade.protobuf.Message other) {
        if (other instanceof com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayShape) {
          return mergeFrom((com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayShape)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayShape other) {
        if (other == com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayShape.getDefaultInstance()) return this;
        if (!other.dim_.isEmpty()) {
          if (dim_.isEmpty()) {
            dim_ = other.dim_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureDimIsMutable();
            dim_.addAll(other.dim_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
              shade.protobuf.CodedInputStream input,
              shade.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
        com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayShape parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (shade.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayShape) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<java.lang.Long> dim_ = java.util.Collections.emptyList();
      private void ensureDimIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          dim_ = new java.util.ArrayList<java.lang.Long>(dim_);
          bitField0_ |= 0x00000001;
        }
      }
      /**
       * <code>repeated int64 dim = 1 [packed = true];</code>
       */
      public java.util.List<java.lang.Long>
      getDimList() {
        return java.util.Collections.unmodifiableList(dim_);
      }
      /**
       * <code>repeated int64 dim = 1 [packed = true];</code>
       */
      public int getDimCount() {
        return dim_.size();
      }
      /**
       * <code>repeated int64 dim = 1 [packed = true];</code>
       */
      public long getDim(int index) {
        return dim_.get(index);
      }
      /**
       * <code>repeated int64 dim = 1 [packed = true];</code>
       */
      public Builder setDim(
              int index, long value) {
        ensureDimIsMutable();
        dim_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 dim = 1 [packed = true];</code>
       */
      public Builder addDim(long value) {
        ensureDimIsMutable();
        dim_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 dim = 1 [packed = true];</code>
       */
      public Builder addAllDim(
              java.lang.Iterable<? extends java.lang.Long> values) {
        ensureDimIsMutable();
        shade.protobuf.AbstractMessageLite.Builder.addAll(
                values, dim_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 dim = 1 [packed = true];</code>
       */
      public Builder clearDim() {
        dim_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
              final shade.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
              final shade.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:pytorch.eas.ArrayShape)
    }

    // @@protoc_insertion_point(class_scope:pytorch.eas.ArrayShape)
    private static final com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayShape DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayShape();
    }

    public static com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayShape getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final shade.protobuf.Parser<ArrayShape>
            PARSER = new shade.protobuf.AbstractParser<ArrayShape>() {
      @java.lang.Override
      public ArrayShape parsePartialFrom(
              shade.protobuf.CodedInputStream input,
              shade.protobuf.ExtensionRegistryLite extensionRegistry)
              throws shade.protobuf.InvalidProtocolBufferException {
        return new ArrayShape(input, extensionRegistry);
      }
    };

    public static shade.protobuf.Parser<ArrayShape> parser() {
      return PARSER;
    }

    @java.lang.Override
    public shade.protobuf.Parser<ArrayShape> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayShape getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ArrayProtoOrBuilder extends
          // @@protoc_insertion_point(interface_extends:pytorch.eas.ArrayProto)
          shade.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Data Type.
     * </pre>
     *
     * <code>.pytorch.eas.ArrayDataType dtype = 1;</code>
     */
    int getDtypeValue();
    /**
     * <pre>
     * Data Type.
     * </pre>
     *
     * <code>.pytorch.eas.ArrayDataType dtype = 1;</code>
     */
    com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayDataType getDtype();

    /**
     * <pre>
     * Shape of the array.
     * </pre>
     *
     * <code>.pytorch.eas.ArrayShape array_shape = 2;</code>
     */
    boolean hasArrayShape();
    /**
     * <pre>
     * Shape of the array.
     * </pre>
     *
     * <code>.pytorch.eas.ArrayShape array_shape = 2;</code>
     */
    com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayShape getArrayShape();
    /**
     * <pre>
     * Shape of the array.
     * </pre>
     *
     * <code>.pytorch.eas.ArrayShape array_shape = 2;</code>
     */
    com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayShapeOrBuilder getArrayShapeOrBuilder();

    /**
     * <pre>
     * DT_FLOAT.
     * </pre>
     *
     * <code>repeated float float_val = 3 [packed = true];</code>
     */
    java.util.List<java.lang.Float> getFloatValList();
    /**
     * <pre>
     * DT_FLOAT.
     * </pre>
     *
     * <code>repeated float float_val = 3 [packed = true];</code>
     */
    int getFloatValCount();
    /**
     * <pre>
     * DT_FLOAT.
     * </pre>
     *
     * <code>repeated float float_val = 3 [packed = true];</code>
     */
    float getFloatVal(int index);

    /**
     * <pre>
     * DT_DOUBLE.
     * </pre>
     *
     * <code>repeated double double_val = 4 [packed = true];</code>
     */
    java.util.List<java.lang.Double> getDoubleValList();
    /**
     * <pre>
     * DT_DOUBLE.
     * </pre>
     *
     * <code>repeated double double_val = 4 [packed = true];</code>
     */
    int getDoubleValCount();
    /**
     * <pre>
     * DT_DOUBLE.
     * </pre>
     *
     * <code>repeated double double_val = 4 [packed = true];</code>
     */
    double getDoubleVal(int index);

    /**
     * <pre>
     * DT_INT32, DT_INT16, DT_INT8, DT_UINT8.
     * </pre>
     *
     * <code>repeated int32 int_val = 5 [packed = true];</code>
     */
    java.util.List<java.lang.Integer> getIntValList();
    /**
     * <pre>
     * DT_INT32, DT_INT16, DT_INT8, DT_UINT8.
     * </pre>
     *
     * <code>repeated int32 int_val = 5 [packed = true];</code>
     */
    int getIntValCount();
    /**
     * <pre>
     * DT_INT32, DT_INT16, DT_INT8, DT_UINT8.
     * </pre>
     *
     * <code>repeated int32 int_val = 5 [packed = true];</code>
     */
    int getIntVal(int index);

    /**
     * <pre>
     * DT_STRING.
     * </pre>
     *
     * <code>repeated bytes string_val = 6;</code>
     */
    java.util.List<shade.protobuf.ByteString> getStringValList();
    /**
     * <pre>
     * DT_STRING.
     * </pre>
     *
     * <code>repeated bytes string_val = 6;</code>
     */
    int getStringValCount();
    /**
     * <pre>
     * DT_STRING.
     * </pre>
     *
     * <code>repeated bytes string_val = 6;</code>
     */
    shade.protobuf.ByteString getStringVal(int index);

    /**
     * <pre>
     * DT_INT64.
     * </pre>
     *
     * <code>repeated int64 int64_val = 7 [packed = true];</code>
     */
    java.util.List<java.lang.Long> getInt64ValList();
    /**
     * <pre>
     * DT_INT64.
     * </pre>
     *
     * <code>repeated int64 int64_val = 7 [packed = true];</code>
     */
    int getInt64ValCount();
    /**
     * <pre>
     * DT_INT64.
     * </pre>
     *
     * <code>repeated int64 int64_val = 7 [packed = true];</code>
     */
    long getInt64Val(int index);
  }
  /**
   * <pre>
   * Protocol buffer representing an array
   * </pre>
   *
   * Protobuf type {@code pytorch.eas.ArrayProto}
   */
  public  static final class ArrayProto extends
          shade.protobuf.GeneratedMessageV3 implements
          // @@protoc_insertion_point(message_implements:pytorch.eas.ArrayProto)
          ArrayProtoOrBuilder {
    private static final long serialVersionUID = 0L;
    // Use ArrayProto.newBuilder() to construct.
    private ArrayProto(shade.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ArrayProto() {
      dtype_ = 0;
      floatVal_ = java.util.Collections.emptyList();
      doubleVal_ = java.util.Collections.emptyList();
      intVal_ = java.util.Collections.emptyList();
      stringVal_ = java.util.Collections.emptyList();
      int64Val_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final shade.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ArrayProto(
            shade.protobuf.CodedInputStream input,
            shade.protobuf.ExtensionRegistryLite extensionRegistry)
            throws shade.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      shade.protobuf.UnknownFieldSet.Builder unknownFields =
              shade.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              int rawValue = input.readEnum();

              dtype_ = rawValue;
              break;
            }
            case 18: {
              com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayShape.Builder subBuilder = null;
              if (arrayShape_ != null) {
                subBuilder = arrayShape_.toBuilder();
              }
              arrayShape_ = input.readMessage(com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayShape.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(arrayShape_);
                arrayShape_ = subBuilder.buildPartial();
              }

              break;
            }
            case 29: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                floatVal_ = new java.util.ArrayList<java.lang.Float>();
                mutable_bitField0_ |= 0x00000004;
              }
              floatVal_.add(input.readFloat());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004) && input.getBytesUntilLimit() > 0) {
                floatVal_ = new java.util.ArrayList<java.lang.Float>();
                mutable_bitField0_ |= 0x00000004;
              }
              while (input.getBytesUntilLimit() > 0) {
                floatVal_.add(input.readFloat());
              }
              input.popLimit(limit);
              break;
            }
            case 33: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                doubleVal_ = new java.util.ArrayList<java.lang.Double>();
                mutable_bitField0_ |= 0x00000008;
              }
              doubleVal_.add(input.readDouble());
              break;
            }
            case 34: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008) && input.getBytesUntilLimit() > 0) {
                doubleVal_ = new java.util.ArrayList<java.lang.Double>();
                mutable_bitField0_ |= 0x00000008;
              }
              while (input.getBytesUntilLimit() > 0) {
                doubleVal_.add(input.readDouble());
              }
              input.popLimit(limit);
              break;
            }
            case 40: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                intVal_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000010;
              }
              intVal_.add(input.readInt32());
              break;
            }
            case 42: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010) && input.getBytesUntilLimit() > 0) {
                intVal_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000010;
              }
              while (input.getBytesUntilLimit() > 0) {
                intVal_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 50: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                stringVal_ = new java.util.ArrayList<shade.protobuf.ByteString>();
                mutable_bitField0_ |= 0x00000020;
              }
              stringVal_.add(input.readBytes());
              break;
            }
            case 56: {
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                int64Val_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000040;
              }
              int64Val_.add(input.readInt64());
              break;
            }
            case 58: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040) && input.getBytesUntilLimit() > 0) {
                int64Val_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000040;
              }
              while (input.getBytesUntilLimit() > 0) {
                int64Val_.add(input.readInt64());
              }
              input.popLimit(limit);
              break;
            }
            default: {
              if (!parseUnknownFieldProto3(
                      input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (shade.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new shade.protobuf.InvalidProtocolBufferException(
                e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          floatVal_ = java.util.Collections.unmodifiableList(floatVal_);
        }
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          doubleVal_ = java.util.Collections.unmodifiableList(doubleVal_);
        }
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          intVal_ = java.util.Collections.unmodifiableList(intVal_);
        }
        if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
          stringVal_ = java.util.Collections.unmodifiableList(stringVal_);
        }
        if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
          int64Val_ = java.util.Collections.unmodifiableList(int64Val_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final shade.protobuf.Descriptors.Descriptor
    getDescriptor() {
      return com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.internal_static_pytorch_eas_ArrayProto_descriptor;
    }

    @java.lang.Override
    protected shade.protobuf.GeneratedMessageV3.FieldAccessorTable
    internalGetFieldAccessorTable() {
      return com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.internal_static_pytorch_eas_ArrayProto_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                      com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProto.class, com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProto.Builder.class);
    }

    private int bitField0_;
    public static final int DTYPE_FIELD_NUMBER = 1;
    private int dtype_;
    /**
     * <pre>
     * Data Type.
     * </pre>
     *
     * <code>.pytorch.eas.ArrayDataType dtype = 1;</code>
     */
    public int getDtypeValue() {
      return dtype_;
    }
    /**
     * <pre>
     * Data Type.
     * </pre>
     *
     * <code>.pytorch.eas.ArrayDataType dtype = 1;</code>
     */
    public com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayDataType getDtype() {
      @SuppressWarnings("deprecation")
      com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayDataType result = com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayDataType.valueOf(dtype_);
      return result == null ? com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayDataType.UNRECOGNIZED : result;
    }

    public static final int ARRAY_SHAPE_FIELD_NUMBER = 2;
    private com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayShape arrayShape_;
    /**
     * <pre>
     * Shape of the array.
     * </pre>
     *
     * <code>.pytorch.eas.ArrayShape array_shape = 2;</code>
     */
    public boolean hasArrayShape() {
      return arrayShape_ != null;
    }
    /**
     * <pre>
     * Shape of the array.
     * </pre>
     *
     * <code>.pytorch.eas.ArrayShape array_shape = 2;</code>
     */
    public com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayShape getArrayShape() {
      return arrayShape_ == null ? com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayShape.getDefaultInstance() : arrayShape_;
    }
    /**
     * <pre>
     * Shape of the array.
     * </pre>
     *
     * <code>.pytorch.eas.ArrayShape array_shape = 2;</code>
     */
    public com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayShapeOrBuilder getArrayShapeOrBuilder() {
      return getArrayShape();
    }

    public static final int FLOAT_VAL_FIELD_NUMBER = 3;
    private java.util.List<java.lang.Float> floatVal_;
    /**
     * <pre>
     * DT_FLOAT.
     * </pre>
     *
     * <code>repeated float float_val = 3 [packed = true];</code>
     */
    public java.util.List<java.lang.Float>
    getFloatValList() {
      return floatVal_;
    }
    /**
     * <pre>
     * DT_FLOAT.
     * </pre>
     *
     * <code>repeated float float_val = 3 [packed = true];</code>
     */
    public int getFloatValCount() {
      return floatVal_.size();
    }
    /**
     * <pre>
     * DT_FLOAT.
     * </pre>
     *
     * <code>repeated float float_val = 3 [packed = true];</code>
     */
    public float getFloatVal(int index) {
      return floatVal_.get(index);
    }
    private int floatValMemoizedSerializedSize = -1;

    public static final int DOUBLE_VAL_FIELD_NUMBER = 4;
    private java.util.List<java.lang.Double> doubleVal_;
    /**
     * <pre>
     * DT_DOUBLE.
     * </pre>
     *
     * <code>repeated double double_val = 4 [packed = true];</code>
     */
    public java.util.List<java.lang.Double>
    getDoubleValList() {
      return doubleVal_;
    }
    /**
     * <pre>
     * DT_DOUBLE.
     * </pre>
     *
     * <code>repeated double double_val = 4 [packed = true];</code>
     */
    public int getDoubleValCount() {
      return doubleVal_.size();
    }
    /**
     * <pre>
     * DT_DOUBLE.
     * </pre>
     *
     * <code>repeated double double_val = 4 [packed = true];</code>
     */
    public double getDoubleVal(int index) {
      return doubleVal_.get(index);
    }
    private int doubleValMemoizedSerializedSize = -1;

    public static final int INT_VAL_FIELD_NUMBER = 5;
    private java.util.List<java.lang.Integer> intVal_;
    /**
     * <pre>
     * DT_INT32, DT_INT16, DT_INT8, DT_UINT8.
     * </pre>
     *
     * <code>repeated int32 int_val = 5 [packed = true];</code>
     */
    public java.util.List<java.lang.Integer>
    getIntValList() {
      return intVal_;
    }
    /**
     * <pre>
     * DT_INT32, DT_INT16, DT_INT8, DT_UINT8.
     * </pre>
     *
     * <code>repeated int32 int_val = 5 [packed = true];</code>
     */
    public int getIntValCount() {
      return intVal_.size();
    }
    /**
     * <pre>
     * DT_INT32, DT_INT16, DT_INT8, DT_UINT8.
     * </pre>
     *
     * <code>repeated int32 int_val = 5 [packed = true];</code>
     */
    public int getIntVal(int index) {
      return intVal_.get(index);
    }
    private int intValMemoizedSerializedSize = -1;

    public static final int STRING_VAL_FIELD_NUMBER = 6;
    private java.util.List<shade.protobuf.ByteString> stringVal_;
    /**
     * <pre>
     * DT_STRING.
     * </pre>
     *
     * <code>repeated bytes string_val = 6;</code>
     */
    public java.util.List<shade.protobuf.ByteString>
    getStringValList() {
      return stringVal_;
    }
    /**
     * <pre>
     * DT_STRING.
     * </pre>
     *
     * <code>repeated bytes string_val = 6;</code>
     */
    public int getStringValCount() {
      return stringVal_.size();
    }
    /**
     * <pre>
     * DT_STRING.
     * </pre>
     *
     * <code>repeated bytes string_val = 6;</code>
     */
    public shade.protobuf.ByteString getStringVal(int index) {
      return stringVal_.get(index);
    }

    public static final int INT64_VAL_FIELD_NUMBER = 7;
    private java.util.List<java.lang.Long> int64Val_;
    /**
     * <pre>
     * DT_INT64.
     * </pre>
     *
     * <code>repeated int64 int64_val = 7 [packed = true];</code>
     */
    public java.util.List<java.lang.Long>
    getInt64ValList() {
      return int64Val_;
    }
    /**
     * <pre>
     * DT_INT64.
     * </pre>
     *
     * <code>repeated int64 int64_val = 7 [packed = true];</code>
     */
    public int getInt64ValCount() {
      return int64Val_.size();
    }
    /**
     * <pre>
     * DT_INT64.
     * </pre>
     *
     * <code>repeated int64 int64_val = 7 [packed = true];</code>
     */
    public long getInt64Val(int index) {
      return int64Val_.get(index);
    }
    private int int64ValMemoizedSerializedSize = -1;

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(shade.protobuf.CodedOutputStream output)
            throws java.io.IOException {
      getSerializedSize();
      if (dtype_ != com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayDataType.DT_INVALID.getNumber()) {
        output.writeEnum(1, dtype_);
      }
      if (arrayShape_ != null) {
        output.writeMessage(2, getArrayShape());
      }
      if (getFloatValList().size() > 0) {
        output.writeUInt32NoTag(26);
        output.writeUInt32NoTag(floatValMemoizedSerializedSize);
      }
      for (int i = 0; i < floatVal_.size(); i++) {
        output.writeFloatNoTag(floatVal_.get(i));
      }
      if (getDoubleValList().size() > 0) {
        output.writeUInt32NoTag(34);
        output.writeUInt32NoTag(doubleValMemoizedSerializedSize);
      }
      for (int i = 0; i < doubleVal_.size(); i++) {
        output.writeDoubleNoTag(doubleVal_.get(i));
      }
      if (getIntValList().size() > 0) {
        output.writeUInt32NoTag(42);
        output.writeUInt32NoTag(intValMemoizedSerializedSize);
      }
      for (int i = 0; i < intVal_.size(); i++) {
        output.writeInt32NoTag(intVal_.get(i));
      }
      for (int i = 0; i < stringVal_.size(); i++) {
        output.writeBytes(6, stringVal_.get(i));
      }
      if (getInt64ValList().size() > 0) {
        output.writeUInt32NoTag(58);
        output.writeUInt32NoTag(int64ValMemoizedSerializedSize);
      }
      for (int i = 0; i < int64Val_.size(); i++) {
        output.writeInt64NoTag(int64Val_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (dtype_ != com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayDataType.DT_INVALID.getNumber()) {
        size += shade.protobuf.CodedOutputStream
                .computeEnumSize(1, dtype_);
      }
      if (arrayShape_ != null) {
        size += shade.protobuf.CodedOutputStream
                .computeMessageSize(2, getArrayShape());
      }
      {
        int dataSize = 0;
        dataSize = 4 * getFloatValList().size();
        size += dataSize;
        if (!getFloatValList().isEmpty()) {
          size += 1;
          size += shade.protobuf.CodedOutputStream
                  .computeInt32SizeNoTag(dataSize);
        }
        floatValMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        dataSize = 8 * getDoubleValList().size();
        size += dataSize;
        if (!getDoubleValList().isEmpty()) {
          size += 1;
          size += shade.protobuf.CodedOutputStream
                  .computeInt32SizeNoTag(dataSize);
        }
        doubleValMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        for (int i = 0; i < intVal_.size(); i++) {
          dataSize += shade.protobuf.CodedOutputStream
                  .computeInt32SizeNoTag(intVal_.get(i));
        }
        size += dataSize;
        if (!getIntValList().isEmpty()) {
          size += 1;
          size += shade.protobuf.CodedOutputStream
                  .computeInt32SizeNoTag(dataSize);
        }
        intValMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        for (int i = 0; i < stringVal_.size(); i++) {
          dataSize += shade.protobuf.CodedOutputStream
                  .computeBytesSizeNoTag(stringVal_.get(i));
        }
        size += dataSize;
        size += 1 * getStringValList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < int64Val_.size(); i++) {
          dataSize += shade.protobuf.CodedOutputStream
                  .computeInt64SizeNoTag(int64Val_.get(i));
        }
        size += dataSize;
        if (!getInt64ValList().isEmpty()) {
          size += 1;
          size += shade.protobuf.CodedOutputStream
                  .computeInt32SizeNoTag(dataSize);
        }
        int64ValMemoizedSerializedSize = dataSize;
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
        return true;
      }
      if (!(obj instanceof com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProto)) {
        return super.equals(obj);
      }
      com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProto other = (com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProto) obj;

      boolean result = true;
      result = result && dtype_ == other.dtype_;
      result = result && (hasArrayShape() == other.hasArrayShape());
      if (hasArrayShape()) {
        result = result && getArrayShape()
                .equals(other.getArrayShape());
      }
      result = result && getFloatValList()
              .equals(other.getFloatValList());
      result = result && getDoubleValList()
              .equals(other.getDoubleValList());
      result = result && getIntValList()
              .equals(other.getIntValList());
      result = result && getStringValList()
              .equals(other.getStringValList());
      result = result && getInt64ValList()
              .equals(other.getInt64ValList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + DTYPE_FIELD_NUMBER;
      hash = (53 * hash) + dtype_;
      if (hasArrayShape()) {
        hash = (37 * hash) + ARRAY_SHAPE_FIELD_NUMBER;
        hash = (53 * hash) + getArrayShape().hashCode();
      }
      if (getFloatValCount() > 0) {
        hash = (37 * hash) + FLOAT_VAL_FIELD_NUMBER;
        hash = (53 * hash) + getFloatValList().hashCode();
      }
      if (getDoubleValCount() > 0) {
        hash = (37 * hash) + DOUBLE_VAL_FIELD_NUMBER;
        hash = (53 * hash) + getDoubleValList().hashCode();
      }
      if (getIntValCount() > 0) {
        hash = (37 * hash) + INT_VAL_FIELD_NUMBER;
        hash = (53 * hash) + getIntValList().hashCode();
      }
      if (getStringValCount() > 0) {
        hash = (37 * hash) + STRING_VAL_FIELD_NUMBER;
        hash = (53 * hash) + getStringValList().hashCode();
      }
      if (getInt64ValCount() > 0) {
        hash = (37 * hash) + INT64_VAL_FIELD_NUMBER;
        hash = (53 * hash) + getInt64ValList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProto parseFrom(
            java.nio.ByteBuffer data)
            throws shade.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProto parseFrom(
            java.nio.ByteBuffer data,
            shade.protobuf.ExtensionRegistryLite extensionRegistry)
            throws shade.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProto parseFrom(
            shade.protobuf.ByteString data)
            throws shade.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProto parseFrom(
            shade.protobuf.ByteString data,
            shade.protobuf.ExtensionRegistryLite extensionRegistry)
            throws shade.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProto parseFrom(byte[] data)
            throws shade.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProto parseFrom(
            byte[] data,
            shade.protobuf.ExtensionRegistryLite extensionRegistry)
            throws shade.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProto parseFrom(java.io.InputStream input)
            throws java.io.IOException {
      return shade.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
    }
    public static com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProto parseFrom(
            java.io.InputStream input,
            shade.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return shade.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProto parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
      return shade.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProto parseDelimitedFrom(
            java.io.InputStream input,
            shade.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return shade.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProto parseFrom(
            shade.protobuf.CodedInputStream input)
            throws java.io.IOException {
      return shade.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
    }
    public static com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProto parseFrom(
            shade.protobuf.CodedInputStream input,
            shade.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return shade.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProto prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
              ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
            shade.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Protocol buffer representing an array
     * </pre>
     *
     * Protobuf type {@code pytorch.eas.ArrayProto}
     */
    public static final class Builder extends
            shade.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:pytorch.eas.ArrayProto)
            com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProtoOrBuilder {
      public static final shade.protobuf.Descriptors.Descriptor
      getDescriptor() {
        return com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.internal_static_pytorch_eas_ArrayProto_descriptor;
      }

      @java.lang.Override
      protected shade.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
        return com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.internal_static_pytorch_eas_ArrayProto_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                        com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProto.class, com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProto.Builder.class);
      }

      // Construct using com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProto.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
              shade.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (shade.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        dtype_ = 0;

        if (arrayShapeBuilder_ == null) {
          arrayShape_ = null;
        } else {
          arrayShape_ = null;
          arrayShapeBuilder_ = null;
        }
        floatVal_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        doubleVal_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        intVal_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        stringVal_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        int64Val_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }

      @java.lang.Override
      public shade.protobuf.Descriptors.Descriptor
      getDescriptorForType() {
        return com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.internal_static_pytorch_eas_ArrayProto_descriptor;
      }

      @java.lang.Override
      public com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProto getDefaultInstanceForType() {
        return com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProto.getDefaultInstance();
      }

      @java.lang.Override
      public com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProto build() {
        com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProto result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProto buildPartial() {
        com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProto result = new com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProto(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.dtype_ = dtype_;
        if (arrayShapeBuilder_ == null) {
          result.arrayShape_ = arrayShape_;
        } else {
          result.arrayShape_ = arrayShapeBuilder_.build();
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          floatVal_ = java.util.Collections.unmodifiableList(floatVal_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.floatVal_ = floatVal_;
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          doubleVal_ = java.util.Collections.unmodifiableList(doubleVal_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.doubleVal_ = doubleVal_;
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          intVal_ = java.util.Collections.unmodifiableList(intVal_);
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.intVal_ = intVal_;
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          stringVal_ = java.util.Collections.unmodifiableList(stringVal_);
          bitField0_ = (bitField0_ & ~0x00000020);
        }
        result.stringVal_ = stringVal_;
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          int64Val_ = java.util.Collections.unmodifiableList(int64Val_);
          bitField0_ = (bitField0_ & ~0x00000040);
        }
        result.int64Val_ = int64Val_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
              shade.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
              shade.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
              shade.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
              shade.protobuf.Descriptors.FieldDescriptor field,
              int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
              shade.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(shade.protobuf.Message other) {
        if (other instanceof com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProto) {
          return mergeFrom((com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProto)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProto other) {
        if (other == com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProto.getDefaultInstance()) return this;
        if (other.dtype_ != 0) {
          setDtypeValue(other.getDtypeValue());
        }
        if (other.hasArrayShape()) {
          mergeArrayShape(other.getArrayShape());
        }
        if (!other.floatVal_.isEmpty()) {
          if (floatVal_.isEmpty()) {
            floatVal_ = other.floatVal_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureFloatValIsMutable();
            floatVal_.addAll(other.floatVal_);
          }
          onChanged();
        }
        if (!other.doubleVal_.isEmpty()) {
          if (doubleVal_.isEmpty()) {
            doubleVal_ = other.doubleVal_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureDoubleValIsMutable();
            doubleVal_.addAll(other.doubleVal_);
          }
          onChanged();
        }
        if (!other.intVal_.isEmpty()) {
          if (intVal_.isEmpty()) {
            intVal_ = other.intVal_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensureIntValIsMutable();
            intVal_.addAll(other.intVal_);
          }
          onChanged();
        }
        if (!other.stringVal_.isEmpty()) {
          if (stringVal_.isEmpty()) {
            stringVal_ = other.stringVal_;
            bitField0_ = (bitField0_ & ~0x00000020);
          } else {
            ensureStringValIsMutable();
            stringVal_.addAll(other.stringVal_);
          }
          onChanged();
        }
        if (!other.int64Val_.isEmpty()) {
          if (int64Val_.isEmpty()) {
            int64Val_ = other.int64Val_;
            bitField0_ = (bitField0_ & ~0x00000040);
          } else {
            ensureInt64ValIsMutable();
            int64Val_.addAll(other.int64Val_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
              shade.protobuf.CodedInputStream input,
              shade.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
        com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProto parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (shade.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProto) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int dtype_ = 0;
      /**
       * <pre>
       * Data Type.
       * </pre>
       *
       * <code>.pytorch.eas.ArrayDataType dtype = 1;</code>
       */
      public int getDtypeValue() {
        return dtype_;
      }
      /**
       * <pre>
       * Data Type.
       * </pre>
       *
       * <code>.pytorch.eas.ArrayDataType dtype = 1;</code>
       */
      public Builder setDtypeValue(int value) {
        dtype_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Data Type.
       * </pre>
       *
       * <code>.pytorch.eas.ArrayDataType dtype = 1;</code>
       */
      public com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayDataType getDtype() {
        @SuppressWarnings("deprecation")
        com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayDataType result = com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayDataType.valueOf(dtype_);
        return result == null ? com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayDataType.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * Data Type.
       * </pre>
       *
       * <code>.pytorch.eas.ArrayDataType dtype = 1;</code>
       */
      public Builder setDtype(com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayDataType value) {
        if (value == null) {
          throw new NullPointerException();
        }

        dtype_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Data Type.
       * </pre>
       *
       * <code>.pytorch.eas.ArrayDataType dtype = 1;</code>
       */
      public Builder clearDtype() {

        dtype_ = 0;
        onChanged();
        return this;
      }

      private com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayShape arrayShape_ = null;
      private shade.protobuf.SingleFieldBuilderV3<
              com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayShape, com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayShape.Builder, com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayShapeOrBuilder> arrayShapeBuilder_;
      /**
       * <pre>
       * Shape of the array.
       * </pre>
       *
       * <code>.pytorch.eas.ArrayShape array_shape = 2;</code>
       */
      public boolean hasArrayShape() {
        return arrayShapeBuilder_ != null || arrayShape_ != null;
      }
      /**
       * <pre>
       * Shape of the array.
       * </pre>
       *
       * <code>.pytorch.eas.ArrayShape array_shape = 2;</code>
       */
      public com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayShape getArrayShape() {
        if (arrayShapeBuilder_ == null) {
          return arrayShape_ == null ? com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayShape.getDefaultInstance() : arrayShape_;
        } else {
          return arrayShapeBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Shape of the array.
       * </pre>
       *
       * <code>.pytorch.eas.ArrayShape array_shape = 2;</code>
       */
      public Builder setArrayShape(com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayShape value) {
        if (arrayShapeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          arrayShape_ = value;
          onChanged();
        } else {
          arrayShapeBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Shape of the array.
       * </pre>
       *
       * <code>.pytorch.eas.ArrayShape array_shape = 2;</code>
       */
      public Builder setArrayShape(
              com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayShape.Builder builderForValue) {
        if (arrayShapeBuilder_ == null) {
          arrayShape_ = builderForValue.build();
          onChanged();
        } else {
          arrayShapeBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Shape of the array.
       * </pre>
       *
       * <code>.pytorch.eas.ArrayShape array_shape = 2;</code>
       */
      public Builder mergeArrayShape(com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayShape value) {
        if (arrayShapeBuilder_ == null) {
          if (arrayShape_ != null) {
            arrayShape_ =
                    com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayShape.newBuilder(arrayShape_).mergeFrom(value).buildPartial();
          } else {
            arrayShape_ = value;
          }
          onChanged();
        } else {
          arrayShapeBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Shape of the array.
       * </pre>
       *
       * <code>.pytorch.eas.ArrayShape array_shape = 2;</code>
       */
      public Builder clearArrayShape() {
        if (arrayShapeBuilder_ == null) {
          arrayShape_ = null;
          onChanged();
        } else {
          arrayShape_ = null;
          arrayShapeBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Shape of the array.
       * </pre>
       *
       * <code>.pytorch.eas.ArrayShape array_shape = 2;</code>
       */
      public com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayShape.Builder getArrayShapeBuilder() {

        onChanged();
        return getArrayShapeFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Shape of the array.
       * </pre>
       *
       * <code>.pytorch.eas.ArrayShape array_shape = 2;</code>
       */
      public com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayShapeOrBuilder getArrayShapeOrBuilder() {
        if (arrayShapeBuilder_ != null) {
          return arrayShapeBuilder_.getMessageOrBuilder();
        } else {
          return arrayShape_ == null ?
                  com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayShape.getDefaultInstance() : arrayShape_;
        }
      }
      /**
       * <pre>
       * Shape of the array.
       * </pre>
       *
       * <code>.pytorch.eas.ArrayShape array_shape = 2;</code>
       */
      private shade.protobuf.SingleFieldBuilderV3<
              com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayShape, com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayShape.Builder, com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayShapeOrBuilder>
      getArrayShapeFieldBuilder() {
        if (arrayShapeBuilder_ == null) {
          arrayShapeBuilder_ = new shade.protobuf.SingleFieldBuilderV3<
                  com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayShape, com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayShape.Builder, com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayShapeOrBuilder>(
                  getArrayShape(),
                  getParentForChildren(),
                  isClean());
          arrayShape_ = null;
        }
        return arrayShapeBuilder_;
      }

      private java.util.List<java.lang.Float> floatVal_ = java.util.Collections.emptyList();
      private void ensureFloatValIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          floatVal_ = new java.util.ArrayList<java.lang.Float>(floatVal_);
          bitField0_ |= 0x00000004;
        }
      }
      /**
       * <pre>
       * DT_FLOAT.
       * </pre>
       *
       * <code>repeated float float_val = 3 [packed = true];</code>
       */
      public java.util.List<java.lang.Float>
      getFloatValList() {
        return java.util.Collections.unmodifiableList(floatVal_);
      }
      /**
       * <pre>
       * DT_FLOAT.
       * </pre>
       *
       * <code>repeated float float_val = 3 [packed = true];</code>
       */
      public int getFloatValCount() {
        return floatVal_.size();
      }
      /**
       * <pre>
       * DT_FLOAT.
       * </pre>
       *
       * <code>repeated float float_val = 3 [packed = true];</code>
       */
      public float getFloatVal(int index) {
        return floatVal_.get(index);
      }
      /**
       * <pre>
       * DT_FLOAT.
       * </pre>
       *
       * <code>repeated float float_val = 3 [packed = true];</code>
       */
      public Builder setFloatVal(
              int index, float value) {
        ensureFloatValIsMutable();
        floatVal_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * DT_FLOAT.
       * </pre>
       *
       * <code>repeated float float_val = 3 [packed = true];</code>
       */
      public Builder addFloatVal(float value) {
        ensureFloatValIsMutable();
        floatVal_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * DT_FLOAT.
       * </pre>
       *
       * <code>repeated float float_val = 3 [packed = true];</code>
       */
      public Builder addAllFloatVal(
              java.lang.Iterable<? extends java.lang.Float> values) {
        ensureFloatValIsMutable();
        shade.protobuf.AbstractMessageLite.Builder.addAll(
                values, floatVal_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * DT_FLOAT.
       * </pre>
       *
       * <code>repeated float float_val = 3 [packed = true];</code>
       */
      public Builder clearFloatVal() {
        floatVal_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Double> doubleVal_ = java.util.Collections.emptyList();
      private void ensureDoubleValIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          doubleVal_ = new java.util.ArrayList<java.lang.Double>(doubleVal_);
          bitField0_ |= 0x00000008;
        }
      }
      /**
       * <pre>
       * DT_DOUBLE.
       * </pre>
       *
       * <code>repeated double double_val = 4 [packed = true];</code>
       */
      public java.util.List<java.lang.Double>
      getDoubleValList() {
        return java.util.Collections.unmodifiableList(doubleVal_);
      }
      /**
       * <pre>
       * DT_DOUBLE.
       * </pre>
       *
       * <code>repeated double double_val = 4 [packed = true];</code>
       */
      public int getDoubleValCount() {
        return doubleVal_.size();
      }
      /**
       * <pre>
       * DT_DOUBLE.
       * </pre>
       *
       * <code>repeated double double_val = 4 [packed = true];</code>
       */
      public double getDoubleVal(int index) {
        return doubleVal_.get(index);
      }
      /**
       * <pre>
       * DT_DOUBLE.
       * </pre>
       *
       * <code>repeated double double_val = 4 [packed = true];</code>
       */
      public Builder setDoubleVal(
              int index, double value) {
        ensureDoubleValIsMutable();
        doubleVal_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * DT_DOUBLE.
       * </pre>
       *
       * <code>repeated double double_val = 4 [packed = true];</code>
       */
      public Builder addDoubleVal(double value) {
        ensureDoubleValIsMutable();
        doubleVal_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * DT_DOUBLE.
       * </pre>
       *
       * <code>repeated double double_val = 4 [packed = true];</code>
       */
      public Builder addAllDoubleVal(
              java.lang.Iterable<? extends java.lang.Double> values) {
        ensureDoubleValIsMutable();
        shade.protobuf.AbstractMessageLite.Builder.addAll(
                values, doubleVal_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * DT_DOUBLE.
       * </pre>
       *
       * <code>repeated double double_val = 4 [packed = true];</code>
       */
      public Builder clearDoubleVal() {
        doubleVal_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Integer> intVal_ = java.util.Collections.emptyList();
      private void ensureIntValIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          intVal_ = new java.util.ArrayList<java.lang.Integer>(intVal_);
          bitField0_ |= 0x00000010;
        }
      }
      /**
       * <pre>
       * DT_INT32, DT_INT16, DT_INT8, DT_UINT8.
       * </pre>
       *
       * <code>repeated int32 int_val = 5 [packed = true];</code>
       */
      public java.util.List<java.lang.Integer>
      getIntValList() {
        return java.util.Collections.unmodifiableList(intVal_);
      }
      /**
       * <pre>
       * DT_INT32, DT_INT16, DT_INT8, DT_UINT8.
       * </pre>
       *
       * <code>repeated int32 int_val = 5 [packed = true];</code>
       */
      public int getIntValCount() {
        return intVal_.size();
      }
      /**
       * <pre>
       * DT_INT32, DT_INT16, DT_INT8, DT_UINT8.
       * </pre>
       *
       * <code>repeated int32 int_val = 5 [packed = true];</code>
       */
      public int getIntVal(int index) {
        return intVal_.get(index);
      }
      /**
       * <pre>
       * DT_INT32, DT_INT16, DT_INT8, DT_UINT8.
       * </pre>
       *
       * <code>repeated int32 int_val = 5 [packed = true];</code>
       */
      public Builder setIntVal(
              int index, int value) {
        ensureIntValIsMutable();
        intVal_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * DT_INT32, DT_INT16, DT_INT8, DT_UINT8.
       * </pre>
       *
       * <code>repeated int32 int_val = 5 [packed = true];</code>
       */
      public Builder addIntVal(int value) {
        ensureIntValIsMutable();
        intVal_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * DT_INT32, DT_INT16, DT_INT8, DT_UINT8.
       * </pre>
       *
       * <code>repeated int32 int_val = 5 [packed = true];</code>
       */
      public Builder addAllIntVal(
              java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureIntValIsMutable();
        shade.protobuf.AbstractMessageLite.Builder.addAll(
                values, intVal_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * DT_INT32, DT_INT16, DT_INT8, DT_UINT8.
       * </pre>
       *
       * <code>repeated int32 int_val = 5 [packed = true];</code>
       */
      public Builder clearIntVal() {
        intVal_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
        return this;
      }

      private java.util.List<shade.protobuf.ByteString> stringVal_ = java.util.Collections.emptyList();
      private void ensureStringValIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          stringVal_ = new java.util.ArrayList<shade.protobuf.ByteString>(stringVal_);
          bitField0_ |= 0x00000020;
        }
      }
      /**
       * <pre>
       * DT_STRING.
       * </pre>
       *
       * <code>repeated bytes string_val = 6;</code>
       */
      public java.util.List<shade.protobuf.ByteString>
      getStringValList() {
        return java.util.Collections.unmodifiableList(stringVal_);
      }
      /**
       * <pre>
       * DT_STRING.
       * </pre>
       *
       * <code>repeated bytes string_val = 6;</code>
       */
      public int getStringValCount() {
        return stringVal_.size();
      }
      /**
       * <pre>
       * DT_STRING.
       * </pre>
       *
       * <code>repeated bytes string_val = 6;</code>
       */
      public shade.protobuf.ByteString getStringVal(int index) {
        return stringVal_.get(index);
      }
      /**
       * <pre>
       * DT_STRING.
       * </pre>
       *
       * <code>repeated bytes string_val = 6;</code>
       */
      public Builder setStringVal(
              int index, shade.protobuf.ByteString value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureStringValIsMutable();
        stringVal_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * DT_STRING.
       * </pre>
       *
       * <code>repeated bytes string_val = 6;</code>
       */
      public Builder addStringVal(shade.protobuf.ByteString value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureStringValIsMutable();
        stringVal_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * DT_STRING.
       * </pre>
       *
       * <code>repeated bytes string_val = 6;</code>
       */
      public Builder addAllStringVal(
              java.lang.Iterable<? extends shade.protobuf.ByteString> values) {
        ensureStringValIsMutable();
        shade.protobuf.AbstractMessageLite.Builder.addAll(
                values, stringVal_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * DT_STRING.
       * </pre>
       *
       * <code>repeated bytes string_val = 6;</code>
       */
      public Builder clearStringVal() {
        stringVal_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Long> int64Val_ = java.util.Collections.emptyList();
      private void ensureInt64ValIsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          int64Val_ = new java.util.ArrayList<java.lang.Long>(int64Val_);
          bitField0_ |= 0x00000040;
        }
      }
      /**
       * <pre>
       * DT_INT64.
       * </pre>
       *
       * <code>repeated int64 int64_val = 7 [packed = true];</code>
       */
      public java.util.List<java.lang.Long>
      getInt64ValList() {
        return java.util.Collections.unmodifiableList(int64Val_);
      }
      /**
       * <pre>
       * DT_INT64.
       * </pre>
       *
       * <code>repeated int64 int64_val = 7 [packed = true];</code>
       */
      public int getInt64ValCount() {
        return int64Val_.size();
      }
      /**
       * <pre>
       * DT_INT64.
       * </pre>
       *
       * <code>repeated int64 int64_val = 7 [packed = true];</code>
       */
      public long getInt64Val(int index) {
        return int64Val_.get(index);
      }
      /**
       * <pre>
       * DT_INT64.
       * </pre>
       *
       * <code>repeated int64 int64_val = 7 [packed = true];</code>
       */
      public Builder setInt64Val(
              int index, long value) {
        ensureInt64ValIsMutable();
        int64Val_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * DT_INT64.
       * </pre>
       *
       * <code>repeated int64 int64_val = 7 [packed = true];</code>
       */
      public Builder addInt64Val(long value) {
        ensureInt64ValIsMutable();
        int64Val_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * DT_INT64.
       * </pre>
       *
       * <code>repeated int64 int64_val = 7 [packed = true];</code>
       */
      public Builder addAllInt64Val(
              java.lang.Iterable<? extends java.lang.Long> values) {
        ensureInt64ValIsMutable();
        shade.protobuf.AbstractMessageLite.Builder.addAll(
                values, int64Val_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * DT_INT64.
       * </pre>
       *
       * <code>repeated int64 int64_val = 7 [packed = true];</code>
       */
      public Builder clearInt64Val() {
        int64Val_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
              final shade.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
              final shade.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:pytorch.eas.ArrayProto)
    }

    // @@protoc_insertion_point(class_scope:pytorch.eas.ArrayProto)
    private static final com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProto DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProto();
    }

    public static com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProto getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final shade.protobuf.Parser<ArrayProto>
            PARSER = new shade.protobuf.AbstractParser<ArrayProto>() {
      @java.lang.Override
      public ArrayProto parsePartialFrom(
              shade.protobuf.CodedInputStream input,
              shade.protobuf.ExtensionRegistryLite extensionRegistry)
              throws shade.protobuf.InvalidProtocolBufferException {
        return new ArrayProto(input, extensionRegistry);
      }
    };

    public static shade.protobuf.Parser<ArrayProto> parser() {
      return PARSER;
    }

    @java.lang.Override
    public shade.protobuf.Parser<ArrayProto> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProto getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface PredictRequestOrBuilder extends
          // @@protoc_insertion_point(interface_extends:pytorch.eas.PredictRequest)
          shade.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Input tensors.
     * </pre>
     *
     * <code>repeated .pytorch.eas.ArrayProto inputs = 1;</code>
     */
    java.util.List<com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProto>
    getInputsList();
    /**
     * <pre>
     * Input tensors.
     * </pre>
     *
     * <code>repeated .pytorch.eas.ArrayProto inputs = 1;</code>
     */
    com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProto getInputs(int index);
    /**
     * <pre>
     * Input tensors.
     * </pre>
     *
     * <code>repeated .pytorch.eas.ArrayProto inputs = 1;</code>
     */
    int getInputsCount();
    /**
     * <pre>
     * Input tensors.
     * </pre>
     *
     * <code>repeated .pytorch.eas.ArrayProto inputs = 1;</code>
     */
    java.util.List<? extends com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProtoOrBuilder>
    getInputsOrBuilderList();
    /**
     * <pre>
     * Input tensors.
     * </pre>
     *
     * <code>repeated .pytorch.eas.ArrayProto inputs = 1;</code>
     */
    com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProtoOrBuilder getInputsOrBuilder(
            int index);

    /**
     * <pre>
     * Output filter.
     * </pre>
     *
     * <code>repeated int32 output_filter = 2;</code>
     */
    java.util.List<java.lang.Integer> getOutputFilterList();
    /**
     * <pre>
     * Output filter.
     * </pre>
     *
     * <code>repeated int32 output_filter = 2;</code>
     */
    int getOutputFilterCount();
    /**
     * <pre>
     * Output filter.
     * </pre>
     *
     * <code>repeated int32 output_filter = 2;</code>
     */
    int getOutputFilter(int index);

    /**
     * <pre>
     * Input tensors for rec
     * </pre>
     *
     * <code>map&lt;string, .pytorch.eas.ArrayProto&gt; map_inputs = 3;</code>
     */
    int getMapInputsCount();
    /**
     * <pre>
     * Input tensors for rec
     * </pre>
     *
     * <code>map&lt;string, .pytorch.eas.ArrayProto&gt; map_inputs = 3;</code>
     */
    boolean containsMapInputs(
            java.lang.String key);
    /**
     * Use {@link #getMapInputsMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProto>
    getMapInputs();
    /**
     * <pre>
     * Input tensors for rec
     * </pre>
     *
     * <code>map&lt;string, .pytorch.eas.ArrayProto&gt; map_inputs = 3;</code>
     */
    java.util.Map<java.lang.String, com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProto>
    getMapInputsMap();
    /**
     * <pre>
     * Input tensors for rec
     * </pre>
     *
     * <code>map&lt;string, .pytorch.eas.ArrayProto&gt; map_inputs = 3;</code>
     */

    com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProto getMapInputsOrDefault(
            java.lang.String key,
            com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProto defaultValue);
    /**
     * <pre>
     * Input tensors for rec
     * </pre>
     *
     * <code>map&lt;string, .pytorch.eas.ArrayProto&gt; map_inputs = 3;</code>
     */

    com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProto getMapInputsOrThrow(
            java.lang.String key);

    /**
     * <pre>
     * debug_level for rec
     * </pre>
     *
     * <code>int32 debug_level = 100;</code>
     */
    int getDebugLevel();
  }
  /**
   * Protobuf type {@code pytorch.eas.PredictRequest}
   */
  public  static final class PredictRequest extends
          shade.protobuf.GeneratedMessageV3 implements
          // @@protoc_insertion_point(message_implements:pytorch.eas.PredictRequest)
          PredictRequestOrBuilder {
    private static final long serialVersionUID = 0L;
    // Use PredictRequest.newBuilder() to construct.
    private PredictRequest(shade.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private PredictRequest() {
      inputs_ = java.util.Collections.emptyList();
      outputFilter_ = java.util.Collections.emptyList();
      debugLevel_ = 0;
    }

    @java.lang.Override
    public final shade.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private PredictRequest(
            shade.protobuf.CodedInputStream input,
            shade.protobuf.ExtensionRegistryLite extensionRegistry)
            throws shade.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      shade.protobuf.UnknownFieldSet.Builder unknownFields =
              shade.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                inputs_ = new java.util.ArrayList<com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProto>();
                mutable_bitField0_ |= 0x00000001;
              }
              inputs_.add(
                      input.readMessage(com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProto.parser(), extensionRegistry));
              break;
            }
            case 16: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                outputFilter_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              outputFilter_.add(input.readInt32());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                outputFilter_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                outputFilter_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                mapInputs_ = shade.protobuf.MapField.newMapField(
                        MapInputsDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000004;
              }
              shade.protobuf.MapEntry<java.lang.String, com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProto>
                      mapInputs__ = input.readMessage(
                      MapInputsDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              mapInputs_.getMutableMap().put(
                      mapInputs__.getKey(), mapInputs__.getValue());
              break;
            }
            case 800: {

              debugLevel_ = input.readInt32();
              break;
            }
            default: {
              if (!parseUnknownFieldProto3(
                      input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (shade.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new shade.protobuf.InvalidProtocolBufferException(
                e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          inputs_ = java.util.Collections.unmodifiableList(inputs_);
        }
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          outputFilter_ = java.util.Collections.unmodifiableList(outputFilter_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final shade.protobuf.Descriptors.Descriptor
    getDescriptor() {
      return com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.internal_static_pytorch_eas_PredictRequest_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    @java.lang.Override
    protected shade.protobuf.MapField internalGetMapField(
            int number) {
      switch (number) {
        case 3:
          return internalGetMapInputs();
        default:
          throw new RuntimeException(
                  "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected shade.protobuf.GeneratedMessageV3.FieldAccessorTable
    internalGetFieldAccessorTable() {
      return com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.internal_static_pytorch_eas_PredictRequest_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                      com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.PredictRequest.class, com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.PredictRequest.Builder.class);
    }

    private int bitField0_;
    public static final int INPUTS_FIELD_NUMBER = 1;
    private java.util.List<com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProto> inputs_;
    /**
     * <pre>
     * Input tensors.
     * </pre>
     *
     * <code>repeated .pytorch.eas.ArrayProto inputs = 1;</code>
     */
    public java.util.List<com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProto> getInputsList() {
      return inputs_;
    }
    /**
     * <pre>
     * Input tensors.
     * </pre>
     *
     * <code>repeated .pytorch.eas.ArrayProto inputs = 1;</code>
     */
    public java.util.List<? extends com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProtoOrBuilder>
    getInputsOrBuilderList() {
      return inputs_;
    }
    /**
     * <pre>
     * Input tensors.
     * </pre>
     *
     * <code>repeated .pytorch.eas.ArrayProto inputs = 1;</code>
     */
    public int getInputsCount() {
      return inputs_.size();
    }
    /**
     * <pre>
     * Input tensors.
     * </pre>
     *
     * <code>repeated .pytorch.eas.ArrayProto inputs = 1;</code>
     */
    public com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProto getInputs(int index) {
      return inputs_.get(index);
    }
    /**
     * <pre>
     * Input tensors.
     * </pre>
     *
     * <code>repeated .pytorch.eas.ArrayProto inputs = 1;</code>
     */
    public com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProtoOrBuilder getInputsOrBuilder(
            int index) {
      return inputs_.get(index);
    }

    public static final int OUTPUT_FILTER_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Integer> outputFilter_;
    /**
     * <pre>
     * Output filter.
     * </pre>
     *
     * <code>repeated int32 output_filter = 2;</code>
     */
    public java.util.List<java.lang.Integer>
    getOutputFilterList() {
      return outputFilter_;
    }
    /**
     * <pre>
     * Output filter.
     * </pre>
     *
     * <code>repeated int32 output_filter = 2;</code>
     */
    public int getOutputFilterCount() {
      return outputFilter_.size();
    }
    /**
     * <pre>
     * Output filter.
     * </pre>
     *
     * <code>repeated int32 output_filter = 2;</code>
     */
    public int getOutputFilter(int index) {
      return outputFilter_.get(index);
    }
    private int outputFilterMemoizedSerializedSize = -1;

    public static final int MAP_INPUTS_FIELD_NUMBER = 3;
    private static final class MapInputsDefaultEntryHolder {
      static final shade.protobuf.MapEntry<
              java.lang.String, com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProto> defaultEntry =
              shade.protobuf.MapEntry
                      .<java.lang.String, com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProto>newDefaultInstance(
                              com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.internal_static_pytorch_eas_PredictRequest_MapInputsEntry_descriptor,
                              shade.protobuf.WireFormat.FieldType.STRING,
                              "",
                              shade.protobuf.WireFormat.FieldType.MESSAGE,
                              com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProto.getDefaultInstance());
    }
    private shade.protobuf.MapField<
            java.lang.String, com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProto> mapInputs_;
    private shade.protobuf.MapField<java.lang.String, com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProto>
    internalGetMapInputs() {
      if (mapInputs_ == null) {
        return shade.protobuf.MapField.emptyMapField(
                MapInputsDefaultEntryHolder.defaultEntry);
      }
      return mapInputs_;
    }

    public int getMapInputsCount() {
      return internalGetMapInputs().getMap().size();
    }
    /**
     * <pre>
     * Input tensors for rec
     * </pre>
     *
     * <code>map&lt;string, .pytorch.eas.ArrayProto&gt; map_inputs = 3;</code>
     */

    public boolean containsMapInputs(
            java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      return internalGetMapInputs().getMap().containsKey(key);
    }
    /**
     * Use {@link #getMapInputsMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProto> getMapInputs() {
      return getMapInputsMap();
    }
    /**
     * <pre>
     * Input tensors for rec
     * </pre>
     *
     * <code>map&lt;string, .pytorch.eas.ArrayProto&gt; map_inputs = 3;</code>
     */

    public java.util.Map<java.lang.String, com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProto> getMapInputsMap() {
      return internalGetMapInputs().getMap();
    }
    /**
     * <pre>
     * Input tensors for rec
     * </pre>
     *
     * <code>map&lt;string, .pytorch.eas.ArrayProto&gt; map_inputs = 3;</code>
     */

    public com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProto getMapInputsOrDefault(
            java.lang.String key,
            com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProto defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProto> map =
              internalGetMapInputs().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * Input tensors for rec
     * </pre>
     *
     * <code>map&lt;string, .pytorch.eas.ArrayProto&gt; map_inputs = 3;</code>
     */

    public com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProto getMapInputsOrThrow(
            java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProto> map =
              internalGetMapInputs().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int DEBUG_LEVEL_FIELD_NUMBER = 100;
    private int debugLevel_;
    /**
     * <pre>
     * debug_level for rec
     * </pre>
     *
     * <code>int32 debug_level = 100;</code>
     */
    public int getDebugLevel() {
      return debugLevel_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(shade.protobuf.CodedOutputStream output)
            throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < inputs_.size(); i++) {
        output.writeMessage(1, inputs_.get(i));
      }
      if (getOutputFilterList().size() > 0) {
        output.writeUInt32NoTag(18);
        output.writeUInt32NoTag(outputFilterMemoizedSerializedSize);
      }
      for (int i = 0; i < outputFilter_.size(); i++) {
        output.writeInt32NoTag(outputFilter_.get(i));
      }
      shade.protobuf.GeneratedMessageV3
              .serializeStringMapTo(
                      output,
                      internalGetMapInputs(),
                      MapInputsDefaultEntryHolder.defaultEntry,
                      3);
      if (debugLevel_ != 0) {
        output.writeInt32(100, debugLevel_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < inputs_.size(); i++) {
        size += shade.protobuf.CodedOutputStream
                .computeMessageSize(1, inputs_.get(i));
      }
      {
        int dataSize = 0;
        for (int i = 0; i < outputFilter_.size(); i++) {
          dataSize += shade.protobuf.CodedOutputStream
                  .computeInt32SizeNoTag(outputFilter_.get(i));
        }
        size += dataSize;
        if (!getOutputFilterList().isEmpty()) {
          size += 1;
          size += shade.protobuf.CodedOutputStream
                  .computeInt32SizeNoTag(dataSize);
        }
        outputFilterMemoizedSerializedSize = dataSize;
      }
      for (java.util.Map.Entry<java.lang.String, com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProto> entry
              : internalGetMapInputs().getMap().entrySet()) {
        shade.protobuf.MapEntry<java.lang.String, com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProto>
                mapInputs__ = MapInputsDefaultEntryHolder.defaultEntry.newBuilderForType()
                .setKey(entry.getKey())
                .setValue(entry.getValue())
                .build();
        size += shade.protobuf.CodedOutputStream
                .computeMessageSize(3, mapInputs__);
      }
      if (debugLevel_ != 0) {
        size += shade.protobuf.CodedOutputStream
                .computeInt32Size(100, debugLevel_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
        return true;
      }
      if (!(obj instanceof com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.PredictRequest)) {
        return super.equals(obj);
      }
      com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.PredictRequest other = (com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.PredictRequest) obj;

      boolean result = true;
      result = result && getInputsList()
              .equals(other.getInputsList());
      result = result && getOutputFilterList()
              .equals(other.getOutputFilterList());
      result = result && internalGetMapInputs().equals(
              other.internalGetMapInputs());
      result = result && (getDebugLevel()
              == other.getDebugLevel());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getInputsCount() > 0) {
        hash = (37 * hash) + INPUTS_FIELD_NUMBER;
        hash = (53 * hash) + getInputsList().hashCode();
      }
      if (getOutputFilterCount() > 0) {
        hash = (37 * hash) + OUTPUT_FILTER_FIELD_NUMBER;
        hash = (53 * hash) + getOutputFilterList().hashCode();
      }
      if (!internalGetMapInputs().getMap().isEmpty()) {
        hash = (37 * hash) + MAP_INPUTS_FIELD_NUMBER;
        hash = (53 * hash) + internalGetMapInputs().hashCode();
      }
      hash = (37 * hash) + DEBUG_LEVEL_FIELD_NUMBER;
      hash = (53 * hash) + getDebugLevel();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.PredictRequest parseFrom(
            java.nio.ByteBuffer data)
            throws shade.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.PredictRequest parseFrom(
            java.nio.ByteBuffer data,
            shade.protobuf.ExtensionRegistryLite extensionRegistry)
            throws shade.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.PredictRequest parseFrom(
            shade.protobuf.ByteString data)
            throws shade.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.PredictRequest parseFrom(
            shade.protobuf.ByteString data,
            shade.protobuf.ExtensionRegistryLite extensionRegistry)
            throws shade.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.PredictRequest parseFrom(byte[] data)
            throws shade.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.PredictRequest parseFrom(
            byte[] data,
            shade.protobuf.ExtensionRegistryLite extensionRegistry)
            throws shade.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.PredictRequest parseFrom(java.io.InputStream input)
            throws java.io.IOException {
      return shade.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
    }
    public static com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.PredictRequest parseFrom(
            java.io.InputStream input,
            shade.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return shade.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.PredictRequest parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
      return shade.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.PredictRequest parseDelimitedFrom(
            java.io.InputStream input,
            shade.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return shade.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.PredictRequest parseFrom(
            shade.protobuf.CodedInputStream input)
            throws java.io.IOException {
      return shade.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
    }
    public static com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.PredictRequest parseFrom(
            shade.protobuf.CodedInputStream input,
            shade.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return shade.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.PredictRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
              ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
            shade.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code pytorch.eas.PredictRequest}
     */
    public static final class Builder extends
            shade.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:pytorch.eas.PredictRequest)
            com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.PredictRequestOrBuilder {
      public static final shade.protobuf.Descriptors.Descriptor
      getDescriptor() {
        return com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.internal_static_pytorch_eas_PredictRequest_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected shade.protobuf.MapField internalGetMapField(
              int number) {
        switch (number) {
          case 3:
            return internalGetMapInputs();
          default:
            throw new RuntimeException(
                    "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected shade.protobuf.MapField internalGetMutableMapField(
              int number) {
        switch (number) {
          case 3:
            return internalGetMutableMapInputs();
          default:
            throw new RuntimeException(
                    "Invalid map field number: " + number);
        }
      }
      @java.lang.Override
      protected shade.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
        return com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.internal_static_pytorch_eas_PredictRequest_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                        com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.PredictRequest.class, com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.PredictRequest.Builder.class);
      }

      // Construct using com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.PredictRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
              shade.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (shade.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getInputsFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (inputsBuilder_ == null) {
          inputs_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          inputsBuilder_.clear();
        }
        outputFilter_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        internalGetMutableMapInputs().clear();
        debugLevel_ = 0;

        return this;
      }

      @java.lang.Override
      public shade.protobuf.Descriptors.Descriptor
      getDescriptorForType() {
        return com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.internal_static_pytorch_eas_PredictRequest_descriptor;
      }

      @java.lang.Override
      public com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.PredictRequest getDefaultInstanceForType() {
        return com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.PredictRequest.getDefaultInstance();
      }

      @java.lang.Override
      public com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.PredictRequest build() {
        com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.PredictRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.PredictRequest buildPartial() {
        com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.PredictRequest result = new com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.PredictRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (inputsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            inputs_ = java.util.Collections.unmodifiableList(inputs_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.inputs_ = inputs_;
        } else {
          result.inputs_ = inputsBuilder_.build();
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          outputFilter_ = java.util.Collections.unmodifiableList(outputFilter_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.outputFilter_ = outputFilter_;
        result.mapInputs_ = internalGetMapInputs();
        result.mapInputs_.makeImmutable();
        result.debugLevel_ = debugLevel_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
              shade.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
              shade.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
              shade.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
              shade.protobuf.Descriptors.FieldDescriptor field,
              int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
              shade.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(shade.protobuf.Message other) {
        if (other instanceof com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.PredictRequest) {
          return mergeFrom((com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.PredictRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.PredictRequest other) {
        if (other == com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.PredictRequest.getDefaultInstance()) return this;
        if (inputsBuilder_ == null) {
          if (!other.inputs_.isEmpty()) {
            if (inputs_.isEmpty()) {
              inputs_ = other.inputs_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureInputsIsMutable();
              inputs_.addAll(other.inputs_);
            }
            onChanged();
          }
        } else {
          if (!other.inputs_.isEmpty()) {
            if (inputsBuilder_.isEmpty()) {
              inputsBuilder_.dispose();
              inputsBuilder_ = null;
              inputs_ = other.inputs_;
              bitField0_ = (bitField0_ & ~0x00000001);
              inputsBuilder_ =
                      shade.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                              getInputsFieldBuilder() : null;
            } else {
              inputsBuilder_.addAllMessages(other.inputs_);
            }
          }
        }
        if (!other.outputFilter_.isEmpty()) {
          if (outputFilter_.isEmpty()) {
            outputFilter_ = other.outputFilter_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureOutputFilterIsMutable();
            outputFilter_.addAll(other.outputFilter_);
          }
          onChanged();
        }
        internalGetMutableMapInputs().mergeFrom(
                other.internalGetMapInputs());
        if (other.getDebugLevel() != 0) {
          setDebugLevel(other.getDebugLevel());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
              shade.protobuf.CodedInputStream input,
              shade.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
        com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.PredictRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (shade.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.PredictRequest) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProto> inputs_ =
              java.util.Collections.emptyList();
      private void ensureInputsIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          inputs_ = new java.util.ArrayList<com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProto>(inputs_);
          bitField0_ |= 0x00000001;
        }
      }

      private shade.protobuf.RepeatedFieldBuilderV3<
              com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProto, com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProto.Builder, com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProtoOrBuilder> inputsBuilder_;

      /**
       * <pre>
       * Input tensors.
       * </pre>
       *
       * <code>repeated .pytorch.eas.ArrayProto inputs = 1;</code>
       */
      public java.util.List<com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProto> getInputsList() {
        if (inputsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(inputs_);
        } else {
          return inputsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * Input tensors.
       * </pre>
       *
       * <code>repeated .pytorch.eas.ArrayProto inputs = 1;</code>
       */
      public int getInputsCount() {
        if (inputsBuilder_ == null) {
          return inputs_.size();
        } else {
          return inputsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * Input tensors.
       * </pre>
       *
       * <code>repeated .pytorch.eas.ArrayProto inputs = 1;</code>
       */
      public com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProto getInputs(int index) {
        if (inputsBuilder_ == null) {
          return inputs_.get(index);
        } else {
          return inputsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * Input tensors.
       * </pre>
       *
       * <code>repeated .pytorch.eas.ArrayProto inputs = 1;</code>
       */
      public Builder setInputs(
              int index, com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProto value) {
        if (inputsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureInputsIsMutable();
          inputs_.set(index, value);
          onChanged();
        } else {
          inputsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Input tensors.
       * </pre>
       *
       * <code>repeated .pytorch.eas.ArrayProto inputs = 1;</code>
       */
      public Builder setInputs(
              int index, com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProto.Builder builderForValue) {
        if (inputsBuilder_ == null) {
          ensureInputsIsMutable();
          inputs_.set(index, builderForValue.build());
          onChanged();
        } else {
          inputsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Input tensors.
       * </pre>
       *
       * <code>repeated .pytorch.eas.ArrayProto inputs = 1;</code>
       */
      public Builder addInputs(com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProto value) {
        if (inputsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureInputsIsMutable();
          inputs_.add(value);
          onChanged();
        } else {
          inputsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * Input tensors.
       * </pre>
       *
       * <code>repeated .pytorch.eas.ArrayProto inputs = 1;</code>
       */
      public Builder addInputs(
              int index, com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProto value) {
        if (inputsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureInputsIsMutable();
          inputs_.add(index, value);
          onChanged();
        } else {
          inputsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Input tensors.
       * </pre>
       *
       * <code>repeated .pytorch.eas.ArrayProto inputs = 1;</code>
       */
      public Builder addInputs(
              com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProto.Builder builderForValue) {
        if (inputsBuilder_ == null) {
          ensureInputsIsMutable();
          inputs_.add(builderForValue.build());
          onChanged();
        } else {
          inputsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Input tensors.
       * </pre>
       *
       * <code>repeated .pytorch.eas.ArrayProto inputs = 1;</code>
       */
      public Builder addInputs(
              int index, com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProto.Builder builderForValue) {
        if (inputsBuilder_ == null) {
          ensureInputsIsMutable();
          inputs_.add(index, builderForValue.build());
          onChanged();
        } else {
          inputsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Input tensors.
       * </pre>
       *
       * <code>repeated .pytorch.eas.ArrayProto inputs = 1;</code>
       */
      public Builder addAllInputs(
              java.lang.Iterable<? extends com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProto> values) {
        if (inputsBuilder_ == null) {
          ensureInputsIsMutable();
          shade.protobuf.AbstractMessageLite.Builder.addAll(
                  values, inputs_);
          onChanged();
        } else {
          inputsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * Input tensors.
       * </pre>
       *
       * <code>repeated .pytorch.eas.ArrayProto inputs = 1;</code>
       */
      public Builder clearInputs() {
        if (inputsBuilder_ == null) {
          inputs_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          inputsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Input tensors.
       * </pre>
       *
       * <code>repeated .pytorch.eas.ArrayProto inputs = 1;</code>
       */
      public Builder removeInputs(int index) {
        if (inputsBuilder_ == null) {
          ensureInputsIsMutable();
          inputs_.remove(index);
          onChanged();
        } else {
          inputsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * Input tensors.
       * </pre>
       *
       * <code>repeated .pytorch.eas.ArrayProto inputs = 1;</code>
       */
      public com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProto.Builder getInputsBuilder(
              int index) {
        return getInputsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * Input tensors.
       * </pre>
       *
       * <code>repeated .pytorch.eas.ArrayProto inputs = 1;</code>
       */
      public com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProtoOrBuilder getInputsOrBuilder(
              int index) {
        if (inputsBuilder_ == null) {
          return inputs_.get(index);  } else {
          return inputsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * Input tensors.
       * </pre>
       *
       * <code>repeated .pytorch.eas.ArrayProto inputs = 1;</code>
       */
      public java.util.List<? extends com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProtoOrBuilder>
      getInputsOrBuilderList() {
        if (inputsBuilder_ != null) {
          return inputsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(inputs_);
        }
      }
      /**
       * <pre>
       * Input tensors.
       * </pre>
       *
       * <code>repeated .pytorch.eas.ArrayProto inputs = 1;</code>
       */
      public com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProto.Builder addInputsBuilder() {
        return getInputsFieldBuilder().addBuilder(
                com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProto.getDefaultInstance());
      }
      /**
       * <pre>
       * Input tensors.
       * </pre>
       *
       * <code>repeated .pytorch.eas.ArrayProto inputs = 1;</code>
       */
      public com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProto.Builder addInputsBuilder(
              int index) {
        return getInputsFieldBuilder().addBuilder(
                index, com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProto.getDefaultInstance());
      }
      /**
       * <pre>
       * Input tensors.
       * </pre>
       *
       * <code>repeated .pytorch.eas.ArrayProto inputs = 1;</code>
       */
      public java.util.List<com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProto.Builder>
      getInputsBuilderList() {
        return getInputsFieldBuilder().getBuilderList();
      }
      private shade.protobuf.RepeatedFieldBuilderV3<
              com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProto, com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProto.Builder, com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProtoOrBuilder>
      getInputsFieldBuilder() {
        if (inputsBuilder_ == null) {
          inputsBuilder_ = new shade.protobuf.RepeatedFieldBuilderV3<
                  com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProto, com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProto.Builder, com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProtoOrBuilder>(
                  inputs_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          inputs_ = null;
        }
        return inputsBuilder_;
      }

      private java.util.List<java.lang.Integer> outputFilter_ = java.util.Collections.emptyList();
      private void ensureOutputFilterIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          outputFilter_ = new java.util.ArrayList<java.lang.Integer>(outputFilter_);
          bitField0_ |= 0x00000002;
        }
      }
      /**
       * <pre>
       * Output filter.
       * </pre>
       *
       * <code>repeated int32 output_filter = 2;</code>
       */
      public java.util.List<java.lang.Integer>
      getOutputFilterList() {
        return java.util.Collections.unmodifiableList(outputFilter_);
      }
      /**
       * <pre>
       * Output filter.
       * </pre>
       *
       * <code>repeated int32 output_filter = 2;</code>
       */
      public int getOutputFilterCount() {
        return outputFilter_.size();
      }
      /**
       * <pre>
       * Output filter.
       * </pre>
       *
       * <code>repeated int32 output_filter = 2;</code>
       */
      public int getOutputFilter(int index) {
        return outputFilter_.get(index);
      }
      /**
       * <pre>
       * Output filter.
       * </pre>
       *
       * <code>repeated int32 output_filter = 2;</code>
       */
      public Builder setOutputFilter(
              int index, int value) {
        ensureOutputFilterIsMutable();
        outputFilter_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Output filter.
       * </pre>
       *
       * <code>repeated int32 output_filter = 2;</code>
       */
      public Builder addOutputFilter(int value) {
        ensureOutputFilterIsMutable();
        outputFilter_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Output filter.
       * </pre>
       *
       * <code>repeated int32 output_filter = 2;</code>
       */
      public Builder addAllOutputFilter(
              java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureOutputFilterIsMutable();
        shade.protobuf.AbstractMessageLite.Builder.addAll(
                values, outputFilter_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Output filter.
       * </pre>
       *
       * <code>repeated int32 output_filter = 2;</code>
       */
      public Builder clearOutputFilter() {
        outputFilter_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      private shade.protobuf.MapField<
              java.lang.String, com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProto> mapInputs_;
      private shade.protobuf.MapField<java.lang.String, com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProto>
      internalGetMapInputs() {
        if (mapInputs_ == null) {
          return shade.protobuf.MapField.emptyMapField(
                  MapInputsDefaultEntryHolder.defaultEntry);
        }
        return mapInputs_;
      }
      private shade.protobuf.MapField<java.lang.String, com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProto>
      internalGetMutableMapInputs() {
        onChanged();;
        if (mapInputs_ == null) {
          mapInputs_ = shade.protobuf.MapField.newMapField(
                  MapInputsDefaultEntryHolder.defaultEntry);
        }
        if (!mapInputs_.isMutable()) {
          mapInputs_ = mapInputs_.copy();
        }
        return mapInputs_;
      }

      public int getMapInputsCount() {
        return internalGetMapInputs().getMap().size();
      }
      /**
       * <pre>
       * Input tensors for rec
       * </pre>
       *
       * <code>map&lt;string, .pytorch.eas.ArrayProto&gt; map_inputs = 3;</code>
       */

      public boolean containsMapInputs(
              java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        return internalGetMapInputs().getMap().containsKey(key);
      }
      /**
       * Use {@link #getMapInputsMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProto> getMapInputs() {
        return getMapInputsMap();
      }
      /**
       * <pre>
       * Input tensors for rec
       * </pre>
       *
       * <code>map&lt;string, .pytorch.eas.ArrayProto&gt; map_inputs = 3;</code>
       */

      public java.util.Map<java.lang.String, com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProto> getMapInputsMap() {
        return internalGetMapInputs().getMap();
      }
      /**
       * <pre>
       * Input tensors for rec
       * </pre>
       *
       * <code>map&lt;string, .pytorch.eas.ArrayProto&gt; map_inputs = 3;</code>
       */

      public com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProto getMapInputsOrDefault(
              java.lang.String key,
              com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProto defaultValue) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProto> map =
                internalGetMapInputs().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       * Input tensors for rec
       * </pre>
       *
       * <code>map&lt;string, .pytorch.eas.ArrayProto&gt; map_inputs = 3;</code>
       */

      public com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProto getMapInputsOrThrow(
              java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProto> map =
                internalGetMapInputs().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearMapInputs() {
        internalGetMutableMapInputs().getMutableMap()
                .clear();
        return this;
      }
      /**
       * <pre>
       * Input tensors for rec
       * </pre>
       *
       * <code>map&lt;string, .pytorch.eas.ArrayProto&gt; map_inputs = 3;</code>
       */

      public Builder removeMapInputs(
              java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableMapInputs().getMutableMap()
                .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProto>
      getMutableMapInputs() {
        return internalGetMutableMapInputs().getMutableMap();
      }
      /**
       * <pre>
       * Input tensors for rec
       * </pre>
       *
       * <code>map&lt;string, .pytorch.eas.ArrayProto&gt; map_inputs = 3;</code>
       */
      public Builder putMapInputs(
              java.lang.String key,
              com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProto value) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        if (value == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableMapInputs().getMutableMap()
                .put(key, value);
        return this;
      }
      /**
       * <pre>
       * Input tensors for rec
       * </pre>
       *
       * <code>map&lt;string, .pytorch.eas.ArrayProto&gt; map_inputs = 3;</code>
       */

      public Builder putAllMapInputs(
              java.util.Map<java.lang.String, com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProto> values) {
        internalGetMutableMapInputs().getMutableMap()
                .putAll(values);
        return this;
      }

      private int debugLevel_ ;
      /**
       * <pre>
       * debug_level for rec
       * </pre>
       *
       * <code>int32 debug_level = 100;</code>
       */
      public int getDebugLevel() {
        return debugLevel_;
      }
      /**
       * <pre>
       * debug_level for rec
       * </pre>
       *
       * <code>int32 debug_level = 100;</code>
       */
      public Builder setDebugLevel(int value) {

        debugLevel_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * debug_level for rec
       * </pre>
       *
       * <code>int32 debug_level = 100;</code>
       */
      public Builder clearDebugLevel() {

        debugLevel_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
              final shade.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
              final shade.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:pytorch.eas.PredictRequest)
    }

    // @@protoc_insertion_point(class_scope:pytorch.eas.PredictRequest)
    private static final com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.PredictRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.PredictRequest();
    }

    public static com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.PredictRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final shade.protobuf.Parser<PredictRequest>
            PARSER = new shade.protobuf.AbstractParser<PredictRequest>() {
      @java.lang.Override
      public PredictRequest parsePartialFrom(
              shade.protobuf.CodedInputStream input,
              shade.protobuf.ExtensionRegistryLite extensionRegistry)
              throws shade.protobuf.InvalidProtocolBufferException {
        return new PredictRequest(input, extensionRegistry);
      }
    };

    public static shade.protobuf.Parser<PredictRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public shade.protobuf.Parser<PredictRequest> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.PredictRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface PredictResponseOrBuilder extends
          // @@protoc_insertion_point(interface_extends:pytorch.eas.PredictResponse)
          shade.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Output tensors.
     * </pre>
     *
     * <code>repeated .pytorch.eas.ArrayProto outputs = 1;</code>
     */
    java.util.List<com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProto>
    getOutputsList();
    /**
     * <pre>
     * Output tensors.
     * </pre>
     *
     * <code>repeated .pytorch.eas.ArrayProto outputs = 1;</code>
     */
    com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProto getOutputs(int index);
    /**
     * <pre>
     * Output tensors.
     * </pre>
     *
     * <code>repeated .pytorch.eas.ArrayProto outputs = 1;</code>
     */
    int getOutputsCount();
    /**
     * <pre>
     * Output tensors.
     * </pre>
     *
     * <code>repeated .pytorch.eas.ArrayProto outputs = 1;</code>
     */
    java.util.List<? extends com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProtoOrBuilder>
    getOutputsOrBuilderList();
    /**
     * <pre>
     * Output tensors.
     * </pre>
     *
     * <code>repeated .pytorch.eas.ArrayProto outputs = 1;</code>
     */
    com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProtoOrBuilder getOutputsOrBuilder(
            int index);

    /**
     * <pre>
     * Output tensors for rec.
     * </pre>
     *
     * <code>map&lt;string, .pytorch.eas.ArrayProto&gt; map_outputs = 2;</code>
     */
    int getMapOutputsCount();
    /**
     * <pre>
     * Output tensors for rec.
     * </pre>
     *
     * <code>map&lt;string, .pytorch.eas.ArrayProto&gt; map_outputs = 2;</code>
     */
    boolean containsMapOutputs(
            java.lang.String key);
    /**
     * Use {@link #getMapOutputsMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProto>
    getMapOutputs();
    /**
     * <pre>
     * Output tensors for rec.
     * </pre>
     *
     * <code>map&lt;string, .pytorch.eas.ArrayProto&gt; map_outputs = 2;</code>
     */
    java.util.Map<java.lang.String, com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProto>
    getMapOutputsMap();
    /**
     * <pre>
     * Output tensors for rec.
     * </pre>
     *
     * <code>map&lt;string, .pytorch.eas.ArrayProto&gt; map_outputs = 2;</code>
     */

    com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProto getMapOutputsOrDefault(
            java.lang.String key,
            com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProto defaultValue);
    /**
     * <pre>
     * Output tensors for rec.
     * </pre>
     *
     * <code>map&lt;string, .pytorch.eas.ArrayProto&gt; map_outputs = 2;</code>
     */

    com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProto getMapOutputsOrThrow(
            java.lang.String key);
  }
  /**
   * <pre>
   * Response for PredictRequest on successful run.
   * </pre>
   *
   * Protobuf type {@code pytorch.eas.PredictResponse}
   */
  public  static final class PredictResponse extends
          shade.protobuf.GeneratedMessageV3 implements
          // @@protoc_insertion_point(message_implements:pytorch.eas.PredictResponse)
          PredictResponseOrBuilder {
    private static final long serialVersionUID = 0L;
    // Use PredictResponse.newBuilder() to construct.
    private PredictResponse(shade.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private PredictResponse() {
      outputs_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final shade.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private PredictResponse(
            shade.protobuf.CodedInputStream input,
            shade.protobuf.ExtensionRegistryLite extensionRegistry)
            throws shade.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      shade.protobuf.UnknownFieldSet.Builder unknownFields =
              shade.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                outputs_ = new java.util.ArrayList<com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProto>();
                mutable_bitField0_ |= 0x00000001;
              }
              outputs_.add(
                      input.readMessage(com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProto.parser(), extensionRegistry));
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                mapOutputs_ = shade.protobuf.MapField.newMapField(
                        MapOutputsDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000002;
              }
              shade.protobuf.MapEntry<java.lang.String, com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProto>
                      mapOutputs__ = input.readMessage(
                      MapOutputsDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              mapOutputs_.getMutableMap().put(
                      mapOutputs__.getKey(), mapOutputs__.getValue());
              break;
            }
            default: {
              if (!parseUnknownFieldProto3(
                      input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (shade.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new shade.protobuf.InvalidProtocolBufferException(
                e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          outputs_ = java.util.Collections.unmodifiableList(outputs_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final shade.protobuf.Descriptors.Descriptor
    getDescriptor() {
      return com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.internal_static_pytorch_eas_PredictResponse_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    @java.lang.Override
    protected shade.protobuf.MapField internalGetMapField(
            int number) {
      switch (number) {
        case 2:
          return internalGetMapOutputs();
        default:
          throw new RuntimeException(
                  "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected shade.protobuf.GeneratedMessageV3.FieldAccessorTable
    internalGetFieldAccessorTable() {
      return com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.internal_static_pytorch_eas_PredictResponse_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                      com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.PredictResponse.class, com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.PredictResponse.Builder.class);
    }

    public static final int OUTPUTS_FIELD_NUMBER = 1;
    private java.util.List<com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProto> outputs_;
    /**
     * <pre>
     * Output tensors.
     * </pre>
     *
     * <code>repeated .pytorch.eas.ArrayProto outputs = 1;</code>
     */
    public java.util.List<com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProto> getOutputsList() {
      return outputs_;
    }
    /**
     * <pre>
     * Output tensors.
     * </pre>
     *
     * <code>repeated .pytorch.eas.ArrayProto outputs = 1;</code>
     */
    public java.util.List<? extends com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProtoOrBuilder>
    getOutputsOrBuilderList() {
      return outputs_;
    }
    /**
     * <pre>
     * Output tensors.
     * </pre>
     *
     * <code>repeated .pytorch.eas.ArrayProto outputs = 1;</code>
     */
    public int getOutputsCount() {
      return outputs_.size();
    }
    /**
     * <pre>
     * Output tensors.
     * </pre>
     *
     * <code>repeated .pytorch.eas.ArrayProto outputs = 1;</code>
     */
    public com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProto getOutputs(int index) {
      return outputs_.get(index);
    }
    /**
     * <pre>
     * Output tensors.
     * </pre>
     *
     * <code>repeated .pytorch.eas.ArrayProto outputs = 1;</code>
     */
    public com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProtoOrBuilder getOutputsOrBuilder(
            int index) {
      return outputs_.get(index);
    }

    public static final int MAP_OUTPUTS_FIELD_NUMBER = 2;
    private static final class MapOutputsDefaultEntryHolder {
      static final shade.protobuf.MapEntry<
              java.lang.String, com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProto> defaultEntry =
              shade.protobuf.MapEntry
                      .<java.lang.String, com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProto>newDefaultInstance(
                              com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.internal_static_pytorch_eas_PredictResponse_MapOutputsEntry_descriptor,
                              shade.protobuf.WireFormat.FieldType.STRING,
                              "",
                              shade.protobuf.WireFormat.FieldType.MESSAGE,
                              com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProto.getDefaultInstance());
    }
    private shade.protobuf.MapField<
            java.lang.String, com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProto> mapOutputs_;
    private shade.protobuf.MapField<java.lang.String, com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProto>
    internalGetMapOutputs() {
      if (mapOutputs_ == null) {
        return shade.protobuf.MapField.emptyMapField(
                MapOutputsDefaultEntryHolder.defaultEntry);
      }
      return mapOutputs_;
    }

    public int getMapOutputsCount() {
      return internalGetMapOutputs().getMap().size();
    }
    /**
     * <pre>
     * Output tensors for rec.
     * </pre>
     *
     * <code>map&lt;string, .pytorch.eas.ArrayProto&gt; map_outputs = 2;</code>
     */

    public boolean containsMapOutputs(
            java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      return internalGetMapOutputs().getMap().containsKey(key);
    }
    /**
     * Use {@link #getMapOutputsMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProto> getMapOutputs() {
      return getMapOutputsMap();
    }
    /**
     * <pre>
     * Output tensors for rec.
     * </pre>
     *
     * <code>map&lt;string, .pytorch.eas.ArrayProto&gt; map_outputs = 2;</code>
     */

    public java.util.Map<java.lang.String, com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProto> getMapOutputsMap() {
      return internalGetMapOutputs().getMap();
    }
    /**
     * <pre>
     * Output tensors for rec.
     * </pre>
     *
     * <code>map&lt;string, .pytorch.eas.ArrayProto&gt; map_outputs = 2;</code>
     */

    public com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProto getMapOutputsOrDefault(
            java.lang.String key,
            com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProto defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProto> map =
              internalGetMapOutputs().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * Output tensors for rec.
     * </pre>
     *
     * <code>map&lt;string, .pytorch.eas.ArrayProto&gt; map_outputs = 2;</code>
     */

    public com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProto getMapOutputsOrThrow(
            java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProto> map =
              internalGetMapOutputs().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(shade.protobuf.CodedOutputStream output)
            throws java.io.IOException {
      for (int i = 0; i < outputs_.size(); i++) {
        output.writeMessage(1, outputs_.get(i));
      }
      shade.protobuf.GeneratedMessageV3
              .serializeStringMapTo(
                      output,
                      internalGetMapOutputs(),
                      MapOutputsDefaultEntryHolder.defaultEntry,
                      2);
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < outputs_.size(); i++) {
        size += shade.protobuf.CodedOutputStream
                .computeMessageSize(1, outputs_.get(i));
      }
      for (java.util.Map.Entry<java.lang.String, com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProto> entry
              : internalGetMapOutputs().getMap().entrySet()) {
        shade.protobuf.MapEntry<java.lang.String, com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProto>
                mapOutputs__ = MapOutputsDefaultEntryHolder.defaultEntry.newBuilderForType()
                .setKey(entry.getKey())
                .setValue(entry.getValue())
                .build();
        size += shade.protobuf.CodedOutputStream
                .computeMessageSize(2, mapOutputs__);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
        return true;
      }
      if (!(obj instanceof com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.PredictResponse)) {
        return super.equals(obj);
      }
      com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.PredictResponse other = (com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.PredictResponse) obj;

      boolean result = true;
      result = result && getOutputsList()
              .equals(other.getOutputsList());
      result = result && internalGetMapOutputs().equals(
              other.internalGetMapOutputs());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getOutputsCount() > 0) {
        hash = (37 * hash) + OUTPUTS_FIELD_NUMBER;
        hash = (53 * hash) + getOutputsList().hashCode();
      }
      if (!internalGetMapOutputs().getMap().isEmpty()) {
        hash = (37 * hash) + MAP_OUTPUTS_FIELD_NUMBER;
        hash = (53 * hash) + internalGetMapOutputs().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.PredictResponse parseFrom(
            java.nio.ByteBuffer data)
            throws shade.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.PredictResponse parseFrom(
            java.nio.ByteBuffer data,
            shade.protobuf.ExtensionRegistryLite extensionRegistry)
            throws shade.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.PredictResponse parseFrom(
            shade.protobuf.ByteString data)
            throws shade.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.PredictResponse parseFrom(
            shade.protobuf.ByteString data,
            shade.protobuf.ExtensionRegistryLite extensionRegistry)
            throws shade.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.PredictResponse parseFrom(byte[] data)
            throws shade.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.PredictResponse parseFrom(
            byte[] data,
            shade.protobuf.ExtensionRegistryLite extensionRegistry)
            throws shade.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.PredictResponse parseFrom(java.io.InputStream input)
            throws java.io.IOException {
      return shade.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
    }
    public static com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.PredictResponse parseFrom(
            java.io.InputStream input,
            shade.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return shade.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.PredictResponse parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
      return shade.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.PredictResponse parseDelimitedFrom(
            java.io.InputStream input,
            shade.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return shade.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.PredictResponse parseFrom(
            shade.protobuf.CodedInputStream input)
            throws java.io.IOException {
      return shade.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
    }
    public static com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.PredictResponse parseFrom(
            shade.protobuf.CodedInputStream input,
            shade.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return shade.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.PredictResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
              ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
            shade.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Response for PredictRequest on successful run.
     * </pre>
     *
     * Protobuf type {@code pytorch.eas.PredictResponse}
     */
    public static final class Builder extends
            shade.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:pytorch.eas.PredictResponse)
            com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.PredictResponseOrBuilder {
      public static final shade.protobuf.Descriptors.Descriptor
      getDescriptor() {
        return com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.internal_static_pytorch_eas_PredictResponse_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected shade.protobuf.MapField internalGetMapField(
              int number) {
        switch (number) {
          case 2:
            return internalGetMapOutputs();
          default:
            throw new RuntimeException(
                    "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected shade.protobuf.MapField internalGetMutableMapField(
              int number) {
        switch (number) {
          case 2:
            return internalGetMutableMapOutputs();
          default:
            throw new RuntimeException(
                    "Invalid map field number: " + number);
        }
      }
      @java.lang.Override
      protected shade.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
        return com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.internal_static_pytorch_eas_PredictResponse_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                        com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.PredictResponse.class, com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.PredictResponse.Builder.class);
      }

      // Construct using com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.PredictResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
              shade.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (shade.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getOutputsFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (outputsBuilder_ == null) {
          outputs_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          outputsBuilder_.clear();
        }
        internalGetMutableMapOutputs().clear();
        return this;
      }

      @java.lang.Override
      public shade.protobuf.Descriptors.Descriptor
      getDescriptorForType() {
        return com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.internal_static_pytorch_eas_PredictResponse_descriptor;
      }

      @java.lang.Override
      public com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.PredictResponse getDefaultInstanceForType() {
        return com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.PredictResponse.getDefaultInstance();
      }

      @java.lang.Override
      public com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.PredictResponse build() {
        com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.PredictResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.PredictResponse buildPartial() {
        com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.PredictResponse result = new com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.PredictResponse(this);
        int from_bitField0_ = bitField0_;
        if (outputsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            outputs_ = java.util.Collections.unmodifiableList(outputs_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.outputs_ = outputs_;
        } else {
          result.outputs_ = outputsBuilder_.build();
        }
        result.mapOutputs_ = internalGetMapOutputs();
        result.mapOutputs_.makeImmutable();
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
              shade.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
              shade.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
              shade.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
              shade.protobuf.Descriptors.FieldDescriptor field,
              int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
              shade.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(shade.protobuf.Message other) {
        if (other instanceof com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.PredictResponse) {
          return mergeFrom((com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.PredictResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.PredictResponse other) {
        if (other == com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.PredictResponse.getDefaultInstance()) return this;
        if (outputsBuilder_ == null) {
          if (!other.outputs_.isEmpty()) {
            if (outputs_.isEmpty()) {
              outputs_ = other.outputs_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureOutputsIsMutable();
              outputs_.addAll(other.outputs_);
            }
            onChanged();
          }
        } else {
          if (!other.outputs_.isEmpty()) {
            if (outputsBuilder_.isEmpty()) {
              outputsBuilder_.dispose();
              outputsBuilder_ = null;
              outputs_ = other.outputs_;
              bitField0_ = (bitField0_ & ~0x00000001);
              outputsBuilder_ =
                      shade.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                              getOutputsFieldBuilder() : null;
            } else {
              outputsBuilder_.addAllMessages(other.outputs_);
            }
          }
        }
        internalGetMutableMapOutputs().mergeFrom(
                other.internalGetMapOutputs());
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
              shade.protobuf.CodedInputStream input,
              shade.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
        com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.PredictResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (shade.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.PredictResponse) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProto> outputs_ =
              java.util.Collections.emptyList();
      private void ensureOutputsIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          outputs_ = new java.util.ArrayList<com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProto>(outputs_);
          bitField0_ |= 0x00000001;
        }
      }

      private shade.protobuf.RepeatedFieldBuilderV3<
              com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProto, com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProto.Builder, com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProtoOrBuilder> outputsBuilder_;

      /**
       * <pre>
       * Output tensors.
       * </pre>
       *
       * <code>repeated .pytorch.eas.ArrayProto outputs = 1;</code>
       */
      public java.util.List<com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProto> getOutputsList() {
        if (outputsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(outputs_);
        } else {
          return outputsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * Output tensors.
       * </pre>
       *
       * <code>repeated .pytorch.eas.ArrayProto outputs = 1;</code>
       */
      public int getOutputsCount() {
        if (outputsBuilder_ == null) {
          return outputs_.size();
        } else {
          return outputsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * Output tensors.
       * </pre>
       *
       * <code>repeated .pytorch.eas.ArrayProto outputs = 1;</code>
       */
      public com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProto getOutputs(int index) {
        if (outputsBuilder_ == null) {
          return outputs_.get(index);
        } else {
          return outputsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * Output tensors.
       * </pre>
       *
       * <code>repeated .pytorch.eas.ArrayProto outputs = 1;</code>
       */
      public Builder setOutputs(
              int index, com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProto value) {
        if (outputsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOutputsIsMutable();
          outputs_.set(index, value);
          onChanged();
        } else {
          outputsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Output tensors.
       * </pre>
       *
       * <code>repeated .pytorch.eas.ArrayProto outputs = 1;</code>
       */
      public Builder setOutputs(
              int index, com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProto.Builder builderForValue) {
        if (outputsBuilder_ == null) {
          ensureOutputsIsMutable();
          outputs_.set(index, builderForValue.build());
          onChanged();
        } else {
          outputsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Output tensors.
       * </pre>
       *
       * <code>repeated .pytorch.eas.ArrayProto outputs = 1;</code>
       */
      public Builder addOutputs(com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProto value) {
        if (outputsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOutputsIsMutable();
          outputs_.add(value);
          onChanged();
        } else {
          outputsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * Output tensors.
       * </pre>
       *
       * <code>repeated .pytorch.eas.ArrayProto outputs = 1;</code>
       */
      public Builder addOutputs(
              int index, com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProto value) {
        if (outputsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOutputsIsMutable();
          outputs_.add(index, value);
          onChanged();
        } else {
          outputsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Output tensors.
       * </pre>
       *
       * <code>repeated .pytorch.eas.ArrayProto outputs = 1;</code>
       */
      public Builder addOutputs(
              com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProto.Builder builderForValue) {
        if (outputsBuilder_ == null) {
          ensureOutputsIsMutable();
          outputs_.add(builderForValue.build());
          onChanged();
        } else {
          outputsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Output tensors.
       * </pre>
       *
       * <code>repeated .pytorch.eas.ArrayProto outputs = 1;</code>
       */
      public Builder addOutputs(
              int index, com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProto.Builder builderForValue) {
        if (outputsBuilder_ == null) {
          ensureOutputsIsMutable();
          outputs_.add(index, builderForValue.build());
          onChanged();
        } else {
          outputsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Output tensors.
       * </pre>
       *
       * <code>repeated .pytorch.eas.ArrayProto outputs = 1;</code>
       */
      public Builder addAllOutputs(
              java.lang.Iterable<? extends com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProto> values) {
        if (outputsBuilder_ == null) {
          ensureOutputsIsMutable();
          shade.protobuf.AbstractMessageLite.Builder.addAll(
                  values, outputs_);
          onChanged();
        } else {
          outputsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * Output tensors.
       * </pre>
       *
       * <code>repeated .pytorch.eas.ArrayProto outputs = 1;</code>
       */
      public Builder clearOutputs() {
        if (outputsBuilder_ == null) {
          outputs_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          outputsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Output tensors.
       * </pre>
       *
       * <code>repeated .pytorch.eas.ArrayProto outputs = 1;</code>
       */
      public Builder removeOutputs(int index) {
        if (outputsBuilder_ == null) {
          ensureOutputsIsMutable();
          outputs_.remove(index);
          onChanged();
        } else {
          outputsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * Output tensors.
       * </pre>
       *
       * <code>repeated .pytorch.eas.ArrayProto outputs = 1;</code>
       */
      public com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProto.Builder getOutputsBuilder(
              int index) {
        return getOutputsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * Output tensors.
       * </pre>
       *
       * <code>repeated .pytorch.eas.ArrayProto outputs = 1;</code>
       */
      public com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProtoOrBuilder getOutputsOrBuilder(
              int index) {
        if (outputsBuilder_ == null) {
          return outputs_.get(index);  } else {
          return outputsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * Output tensors.
       * </pre>
       *
       * <code>repeated .pytorch.eas.ArrayProto outputs = 1;</code>
       */
      public java.util.List<? extends com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProtoOrBuilder>
      getOutputsOrBuilderList() {
        if (outputsBuilder_ != null) {
          return outputsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(outputs_);
        }
      }
      /**
       * <pre>
       * Output tensors.
       * </pre>
       *
       * <code>repeated .pytorch.eas.ArrayProto outputs = 1;</code>
       */
      public com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProto.Builder addOutputsBuilder() {
        return getOutputsFieldBuilder().addBuilder(
                com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProto.getDefaultInstance());
      }
      /**
       * <pre>
       * Output tensors.
       * </pre>
       *
       * <code>repeated .pytorch.eas.ArrayProto outputs = 1;</code>
       */
      public com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProto.Builder addOutputsBuilder(
              int index) {
        return getOutputsFieldBuilder().addBuilder(
                index, com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProto.getDefaultInstance());
      }
      /**
       * <pre>
       * Output tensors.
       * </pre>
       *
       * <code>repeated .pytorch.eas.ArrayProto outputs = 1;</code>
       */
      public java.util.List<com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProto.Builder>
      getOutputsBuilderList() {
        return getOutputsFieldBuilder().getBuilderList();
      }
      private shade.protobuf.RepeatedFieldBuilderV3<
              com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProto, com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProto.Builder, com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProtoOrBuilder>
      getOutputsFieldBuilder() {
        if (outputsBuilder_ == null) {
          outputsBuilder_ = new shade.protobuf.RepeatedFieldBuilderV3<
                  com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProto, com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProto.Builder, com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProtoOrBuilder>(
                  outputs_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          outputs_ = null;
        }
        return outputsBuilder_;
      }

      private shade.protobuf.MapField<
              java.lang.String, com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProto> mapOutputs_;
      private shade.protobuf.MapField<java.lang.String, com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProto>
      internalGetMapOutputs() {
        if (mapOutputs_ == null) {
          return shade.protobuf.MapField.emptyMapField(
                  MapOutputsDefaultEntryHolder.defaultEntry);
        }
        return mapOutputs_;
      }
      private shade.protobuf.MapField<java.lang.String, com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProto>
      internalGetMutableMapOutputs() {
        onChanged();;
        if (mapOutputs_ == null) {
          mapOutputs_ = shade.protobuf.MapField.newMapField(
                  MapOutputsDefaultEntryHolder.defaultEntry);
        }
        if (!mapOutputs_.isMutable()) {
          mapOutputs_ = mapOutputs_.copy();
        }
        return mapOutputs_;
      }

      public int getMapOutputsCount() {
        return internalGetMapOutputs().getMap().size();
      }
      /**
       * <pre>
       * Output tensors for rec.
       * </pre>
       *
       * <code>map&lt;string, .pytorch.eas.ArrayProto&gt; map_outputs = 2;</code>
       */

      public boolean containsMapOutputs(
              java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        return internalGetMapOutputs().getMap().containsKey(key);
      }
      /**
       * Use {@link #getMapOutputsMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProto> getMapOutputs() {
        return getMapOutputsMap();
      }
      /**
       * <pre>
       * Output tensors for rec.
       * </pre>
       *
       * <code>map&lt;string, .pytorch.eas.ArrayProto&gt; map_outputs = 2;</code>
       */

      public java.util.Map<java.lang.String, com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProto> getMapOutputsMap() {
        return internalGetMapOutputs().getMap();
      }
      /**
       * <pre>
       * Output tensors for rec.
       * </pre>
       *
       * <code>map&lt;string, .pytorch.eas.ArrayProto&gt; map_outputs = 2;</code>
       */

      public com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProto getMapOutputsOrDefault(
              java.lang.String key,
              com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProto defaultValue) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProto> map =
                internalGetMapOutputs().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       * Output tensors for rec.
       * </pre>
       *
       * <code>map&lt;string, .pytorch.eas.ArrayProto&gt; map_outputs = 2;</code>
       */

      public com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProto getMapOutputsOrThrow(
              java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProto> map =
                internalGetMapOutputs().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearMapOutputs() {
        internalGetMutableMapOutputs().getMutableMap()
                .clear();
        return this;
      }
      /**
       * <pre>
       * Output tensors for rec.
       * </pre>
       *
       * <code>map&lt;string, .pytorch.eas.ArrayProto&gt; map_outputs = 2;</code>
       */

      public Builder removeMapOutputs(
              java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableMapOutputs().getMutableMap()
                .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProto>
      getMutableMapOutputs() {
        return internalGetMutableMapOutputs().getMutableMap();
      }
      /**
       * <pre>
       * Output tensors for rec.
       * </pre>
       *
       * <code>map&lt;string, .pytorch.eas.ArrayProto&gt; map_outputs = 2;</code>
       */
      public Builder putMapOutputs(
              java.lang.String key,
              com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProto value) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        if (value == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableMapOutputs().getMutableMap()
                .put(key, value);
        return this;
      }
      /**
       * <pre>
       * Output tensors for rec.
       * </pre>
       *
       * <code>map&lt;string, .pytorch.eas.ArrayProto&gt; map_outputs = 2;</code>
       */

      public Builder putAllMapOutputs(
              java.util.Map<java.lang.String, com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.ArrayProto> values) {
        internalGetMutableMapOutputs().getMutableMap()
                .putAll(values);
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
              final shade.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
              final shade.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:pytorch.eas.PredictResponse)
    }

    // @@protoc_insertion_point(class_scope:pytorch.eas.PredictResponse)
    private static final com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.PredictResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.PredictResponse();
    }

    public static com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.PredictResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final shade.protobuf.Parser<PredictResponse>
            PARSER = new shade.protobuf.AbstractParser<PredictResponse>() {
      @java.lang.Override
      public PredictResponse parsePartialFrom(
              shade.protobuf.CodedInputStream input,
              shade.protobuf.ExtensionRegistryLite extensionRegistry)
              throws shade.protobuf.InvalidProtocolBufferException {
        return new PredictResponse(input, extensionRegistry);
      }
    };

    public static shade.protobuf.Parser<PredictResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public shade.protobuf.Parser<PredictResponse> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.aliyun.openservices.eas.predict.proto.TorchPredictProtos.PredictResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final shade.protobuf.Descriptors.Descriptor
          internal_static_pytorch_eas_ArrayShape_descriptor;
  private static final
  shade.protobuf.GeneratedMessageV3.FieldAccessorTable
          internal_static_pytorch_eas_ArrayShape_fieldAccessorTable;
  private static final shade.protobuf.Descriptors.Descriptor
          internal_static_pytorch_eas_ArrayProto_descriptor;
  private static final
  shade.protobuf.GeneratedMessageV3.FieldAccessorTable
          internal_static_pytorch_eas_ArrayProto_fieldAccessorTable;
  private static final shade.protobuf.Descriptors.Descriptor
          internal_static_pytorch_eas_PredictRequest_descriptor;
  private static final
  shade.protobuf.GeneratedMessageV3.FieldAccessorTable
          internal_static_pytorch_eas_PredictRequest_fieldAccessorTable;
  private static final shade.protobuf.Descriptors.Descriptor
          internal_static_pytorch_eas_PredictRequest_MapInputsEntry_descriptor;
  private static final
  shade.protobuf.GeneratedMessageV3.FieldAccessorTable
          internal_static_pytorch_eas_PredictRequest_MapInputsEntry_fieldAccessorTable;
  private static final shade.protobuf.Descriptors.Descriptor
          internal_static_pytorch_eas_PredictResponse_descriptor;
  private static final
  shade.protobuf.GeneratedMessageV3.FieldAccessorTable
          internal_static_pytorch_eas_PredictResponse_fieldAccessorTable;
  private static final shade.protobuf.Descriptors.Descriptor
          internal_static_pytorch_eas_PredictResponse_MapOutputsEntry_descriptor;
  private static final
  shade.protobuf.GeneratedMessageV3.FieldAccessorTable
          internal_static_pytorch_eas_PredictResponse_MapOutputsEntry_fieldAccessorTable;

  public static shade.protobuf.Descriptors.FileDescriptor
  getDescriptor() {
    return descriptor;
  }
  private static  shade.protobuf.Descriptors.FileDescriptor
          descriptor;
  static {
    java.lang.String[] descriptorData = {
            "\n\025pytorch_predict.proto\022\013pytorch.eas\"\035\n\n" +
                    "ArrayShape\022\017\n\003dim\030\001 \003(\003B\002\020\001\"\324\001\n\nArrayPro" +
                    "to\022)\n\005dtype\030\001 \001(\0162\032.pytorch.eas.ArrayDat" +
                    "aType\022,\n\013array_shape\030\002 \001(\0132\027.pytorch.eas" +
                    ".ArrayShape\022\025\n\tfloat_val\030\003 \003(\002B\002\020\001\022\026\n\ndo" +
                    "uble_val\030\004 \003(\001B\002\020\001\022\023\n\007int_val\030\005 \003(\005B\002\020\001\022" +
                    "\022\n\nstring_val\030\006 \003(\014\022\025\n\tint64_val\030\007 \003(\003B\002" +
                    "\020\001\"\360\001\n\016PredictRequest\022\'\n\006inputs\030\001 \003(\0132\027." +
                    "pytorch.eas.ArrayProto\022\025\n\routput_filter\030" +
                    "\002 \003(\005\022>\n\nmap_inputs\030\003 \003(\0132*.pytorch.eas." +
                    "PredictRequest.MapInputsEntry\022\023\n\013debug_l" +
                    "evel\030d \001(\005\032I\n\016MapInputsEntry\022\013\n\003key\030\001 \001(" +
                    "\t\022&\n\005value\030\002 \001(\0132\027.pytorch.eas.ArrayProt" +
                    "o:\0028\001\"\312\001\n\017PredictResponse\022(\n\007outputs\030\001 \003" +
                    "(\0132\027.pytorch.eas.ArrayProto\022A\n\013map_outpu" +
                    "ts\030\002 \003(\0132,.pytorch.eas.PredictResponse.M" +
                    "apOutputsEntry\032J\n\017MapOutputsEntry\022\013\n\003key" +
                    "\030\001 \001(\t\022&\n\005value\030\002 \001(\0132\027.pytorch.eas.Arra" +
                    "yProto:\0028\001*\333\002\n\rArrayDataType\022\016\n\nDT_INVAL" +
                    "ID\020\000\022\014\n\010DT_FLOAT\020\001\022\r\n\tDT_DOUBLE\020\002\022\014\n\010DT_" +
                    "INT32\020\003\022\014\n\010DT_UINT8\020\004\022\014\n\010DT_INT16\020\005\022\013\n\007D" +
                    "T_INT8\020\006\022\r\n\tDT_STRING\020\007\022\020\n\014DT_COMPLEX64\020" +
                    "\010\022\014\n\010DT_INT64\020\t\022\013\n\007DT_BOOL\020\n\022\014\n\010DT_QINT8" +
                    "\020\013\022\r\n\tDT_QUINT8\020\014\022\r\n\tDT_QINT32\020\r\022\017\n\013DT_B" +
                    "FLOAT16\020\016\022\r\n\tDT_QINT16\020\017\022\016\n\nDT_QUINT16\020\020" +
                    "\022\r\n\tDT_UINT16\020\021\022\021\n\rDT_COMPLEX128\020\022\022\013\n\007DT" +
                    "_HALF\020\023\022\017\n\013DT_RESOURCE\020\024\022\016\n\nDT_VARIANT\020\025" +
                    "BB\n)com.aliyun.openservices.eas.predict." +
                    "protoB\022TorchPredictProtos\370\001\001b\006proto3"
    };
    shade.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
            new shade.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
              public shade.protobuf.ExtensionRegistry assignDescriptors(
                      shade.protobuf.Descriptors.FileDescriptor root) {
                descriptor = root;
                return null;
              }
            };
    shade.protobuf.Descriptors.FileDescriptor
            .internalBuildGeneratedFileFrom(descriptorData,
                    new shade.protobuf.Descriptors.FileDescriptor[] {
                    }, assigner);
    internal_static_pytorch_eas_ArrayShape_descriptor =
            getDescriptor().getMessageTypes().get(0);
    internal_static_pytorch_eas_ArrayShape_fieldAccessorTable = new
            shade.protobuf.GeneratedMessageV3.FieldAccessorTable(
            internal_static_pytorch_eas_ArrayShape_descriptor,
            new java.lang.String[] { "Dim", });
    internal_static_pytorch_eas_ArrayProto_descriptor =
            getDescriptor().getMessageTypes().get(1);
    internal_static_pytorch_eas_ArrayProto_fieldAccessorTable = new
            shade.protobuf.GeneratedMessageV3.FieldAccessorTable(
            internal_static_pytorch_eas_ArrayProto_descriptor,
            new java.lang.String[] { "Dtype", "ArrayShape", "FloatVal", "DoubleVal", "IntVal", "StringVal", "Int64Val", });
    internal_static_pytorch_eas_PredictRequest_descriptor =
            getDescriptor().getMessageTypes().get(2);
    internal_static_pytorch_eas_PredictRequest_fieldAccessorTable = new
            shade.protobuf.GeneratedMessageV3.FieldAccessorTable(
            internal_static_pytorch_eas_PredictRequest_descriptor,
            new java.lang.String[] { "Inputs", "OutputFilter", "MapInputs", "DebugLevel", });
    internal_static_pytorch_eas_PredictRequest_MapInputsEntry_descriptor =
            internal_static_pytorch_eas_PredictRequest_descriptor.getNestedTypes().get(0);
    internal_static_pytorch_eas_PredictRequest_MapInputsEntry_fieldAccessorTable = new
            shade.protobuf.GeneratedMessageV3.FieldAccessorTable(
            internal_static_pytorch_eas_PredictRequest_MapInputsEntry_descriptor,
            new java.lang.String[] { "Key", "Value", });
    internal_static_pytorch_eas_PredictResponse_descriptor =
            getDescriptor().getMessageTypes().get(3);
    internal_static_pytorch_eas_PredictResponse_fieldAccessorTable = new
            shade.protobuf.GeneratedMessageV3.FieldAccessorTable(
            internal_static_pytorch_eas_PredictResponse_descriptor,
            new java.lang.String[] { "Outputs", "MapOutputs", });
    internal_static_pytorch_eas_PredictResponse_MapOutputsEntry_descriptor =
            internal_static_pytorch_eas_PredictResponse_descriptor.getNestedTypes().get(0);
    internal_static_pytorch_eas_PredictResponse_MapOutputsEntry_fieldAccessorTable = new
            shade.protobuf.GeneratedMessageV3.FieldAccessorTable(
            internal_static_pytorch_eas_PredictResponse_MapOutputsEntry_descriptor,
            new java.lang.String[] { "Key", "Value", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
