// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: queue_service.proto

package com.aliyun.openservices.eas.predict.proto;

public final class QueueServiceProtos {
  private QueueServiceProtos() {}

  public static void registerAllExtensions(shade.protobuf.ExtensionRegistryLite registry) {}

  public static void registerAllExtensions(shade.protobuf.ExtensionRegistry registry) {
    registerAllExtensions((shade.protobuf.ExtensionRegistryLite) registry);
  }

  public interface DataFrameProtoOrBuilder
      extends
      // @@protoc_insertion_point(interface_extends:DataFrameProto)
      shade.protobuf.MessageOrBuilder {

    /** <code>uint64 index = 1;</code> */
    long getIndex();

    /** <code>map&lt;string, string&gt; tags = 2;</code> */
    int getTagsCount();
    /** <code>map&lt;string, string&gt; tags = 2;</code> */
    boolean containsTags(String key);
    /** Use {@link #getTagsMap()} instead. */
    @Deprecated
    java.util.Map<String, String> getTags();
    /** <code>map&lt;string, string&gt; tags = 2;</code> */
    java.util.Map<String, String> getTagsMap();
    /** <code>map&lt;string, string&gt; tags = 2;</code> */
    String getTagsOrDefault(String key, String defaultValue);
    /** <code>map&lt;string, string&gt; tags = 2;</code> */
    String getTagsOrThrow(String key);

    /** <code>bytes data = 3;</code> */
    shade.protobuf.ByteString getData();

    /** <code>string message = 4;</code> */
    String getMessage();
    /** <code>string message = 4;</code> */
    shade.protobuf.ByteString getMessageBytes();
  }
  /** Protobuf type {@code DataFrameProto} */
  public static final class DataFrameProto extends shade.protobuf.GeneratedMessageV3
      implements
      // @@protoc_insertion_point(message_implements:DataFrameProto)
      DataFrameProtoOrBuilder {
    private static final long serialVersionUID = 0L;
    // Use DataFrameProto.newBuilder() to construct.
    private DataFrameProto(shade.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }

    private DataFrameProto() {
      index_ = 0L;
      data_ = shade.protobuf.ByteString.EMPTY;
      message_ = "";
    }

    @Override
    public final shade.protobuf.UnknownFieldSet getUnknownFields() {
      return this.unknownFields;
    }

    private DataFrameProto(
        shade.protobuf.CodedInputStream input,
        shade.protobuf.ExtensionRegistryLite extensionRegistry)
        throws shade.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      shade.protobuf.UnknownFieldSet.Builder unknownFields =
          shade.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default:
              {
                if (!parseUnknownFieldProto3(input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            case 8:
              {
                index_ = input.readUInt64();
                break;
              }
            case 18:
              {
                if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                  tags_ = shade.protobuf.MapField.newMapField(TagsDefaultEntryHolder.defaultEntry);
                  mutable_bitField0_ |= 0x00000002;
                }
                shade.protobuf.MapEntry<String, String> tags__ =
                    input.readMessage(
                        TagsDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
                tags_.getMutableMap().put(tags__.getKey(), tags__.getValue());
                break;
              }
            case 26:
              {
                data_ = input.readBytes();
                break;
              }
            case 34:
              {
                String s = input.readStringRequireUtf8();

                message_ = s;
                break;
              }
          }
        }
      } catch (shade.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new shade.protobuf.InvalidProtocolBufferException(e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }

    public static final shade.protobuf.Descriptors.Descriptor getDescriptor() {
      return QueueServiceProtos
          .internal_static_DataFrameProto_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    protected shade.protobuf.MapField internalGetMapField(int number) {
      switch (number) {
        case 2:
          return internalGetTags();
        default:
          throw new RuntimeException("Invalid map field number: " + number);
      }
    }

    protected FieldAccessorTable internalGetFieldAccessorTable() {
      return QueueServiceProtos
          .internal_static_DataFrameProto_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              DataFrameProto.class,
              Builder
                  .class);
    }

    private int bitField0_;
    public static final int INDEX_FIELD_NUMBER = 1;
    private long index_;
    /** <code>uint64 index = 1;</code> */
    public long getIndex() {
      return index_;
    }

    public static final int TAGS_FIELD_NUMBER = 2;

    private static final class TagsDefaultEntryHolder {
      static final shade.protobuf.MapEntry<String, String> defaultEntry =
          shade.protobuf.MapEntry.<String, String>newDefaultInstance(
              QueueServiceProtos
                  .internal_static_DataFrameProto_TagsEntry_descriptor,
              shade.protobuf.WireFormat.FieldType.STRING,
              "",
              shade.protobuf.WireFormat.FieldType.STRING,
              "");
    }

    private shade.protobuf.MapField<String, String> tags_;

    private shade.protobuf.MapField<String, String> internalGetTags() {
      if (tags_ == null) {
        return shade.protobuf.MapField.emptyMapField(TagsDefaultEntryHolder.defaultEntry);
      }
      return tags_;
    }

    public int getTagsCount() {
      return internalGetTags().getMap().size();
    }
    /** <code>map&lt;string, string&gt; tags = 2;</code> */
    public boolean containsTags(String key) {
      if (key == null) {
        throw new NullPointerException();
      }
      return internalGetTags().getMap().containsKey(key);
    }
    /** Use {@link #getTagsMap()} instead. */
    @Deprecated
    public java.util.Map<String, String> getTags() {
      return getTagsMap();
    }
    /** <code>map&lt;string, string&gt; tags = 2;</code> */
    public java.util.Map<String, String> getTagsMap() {
      return internalGetTags().getMap();
    }
    /** <code>map&lt;string, string&gt; tags = 2;</code> */
    public String getTagsOrDefault(String key, String defaultValue) {
      if (key == null) {
        throw new NullPointerException();
      }
      java.util.Map<String, String> map = internalGetTags().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /** <code>map&lt;string, string&gt; tags = 2;</code> */
    public String getTagsOrThrow(String key) {
      if (key == null) {
        throw new NullPointerException();
      }
      java.util.Map<String, String> map = internalGetTags().getMap();
      if (!map.containsKey(key)) {
        throw new IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int DATA_FIELD_NUMBER = 3;
    private shade.protobuf.ByteString data_;
    /** <code>bytes data = 3;</code> */
    public shade.protobuf.ByteString getData() {
      return data_;
    }

    public static final int MESSAGE_FIELD_NUMBER = 4;
    private volatile Object message_;
    /** <code>string message = 4;</code> */
    public String getMessage() {
      Object ref = message_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        shade.protobuf.ByteString bs = (shade.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        message_ = s;
        return s;
      }
    }
    /** <code>string message = 4;</code> */
    public shade.protobuf.ByteString getMessageBytes() {
      Object ref = message_;
      if (ref instanceof String) {
        shade.protobuf.ByteString b =
            shade.protobuf.ByteString.copyFromUtf8((String) ref);
        message_ = b;
        return b;
      } else {
        return (shade.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;

    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(shade.protobuf.CodedOutputStream output) throws java.io.IOException {
      if (index_ != 0L) {
        output.writeUInt64(1, index_);
      }
      shade.protobuf.GeneratedMessageV3.serializeStringMapTo(
          output, internalGetTags(), TagsDefaultEntryHolder.defaultEntry, 2);
      if (!data_.isEmpty()) {
        output.writeBytes(3, data_);
      }
      if (!getMessageBytes().isEmpty()) {
        shade.protobuf.GeneratedMessageV3.writeString(output, 4, message_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (index_ != 0L) {
        size += shade.protobuf.CodedOutputStream.computeUInt64Size(1, index_);
      }
      for (java.util.Map.Entry<String, String> entry :
          internalGetTags().getMap().entrySet()) {
        shade.protobuf.MapEntry<String, String> tags__ =
            TagsDefaultEntryHolder.defaultEntry
                .newBuilderForType()
                .setKey(entry.getKey())
                .setValue(entry.getValue())
                .build();
        size += shade.protobuf.CodedOutputStream.computeMessageSize(2, tags__);
      }
      if (!data_.isEmpty()) {
        size += shade.protobuf.CodedOutputStream.computeBytesSize(3, data_);
      }
      if (!getMessageBytes().isEmpty()) {
        size += shade.protobuf.GeneratedMessageV3.computeStringSize(4, message_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
        return true;
      }
      if (!(obj
          instanceof DataFrameProto)) {
        return super.equals(obj);
      }
      DataFrameProto other =
          (DataFrameProto) obj;

      boolean result = true;
      result = result && (getIndex() == other.getIndex());
      result = result && internalGetTags().equals(other.internalGetTags());
      result = result && getData().equals(other.getData());
      result = result && getMessage().equals(other.getMessage());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + INDEX_FIELD_NUMBER;
      hash = (53 * hash) + shade.protobuf.Internal.hashLong(getIndex());
      if (!internalGetTags().getMap().isEmpty()) {
        hash = (37 * hash) + TAGS_FIELD_NUMBER;
        hash = (53 * hash) + internalGetTags().hashCode();
      }
      hash = (37 * hash) + DATA_FIELD_NUMBER;
      hash = (53 * hash) + getData().hashCode();
      hash = (37 * hash) + MESSAGE_FIELD_NUMBER;
      hash = (53 * hash) + getMessage().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static DataFrameProto
        parseFrom(java.nio.ByteBuffer data) throws shade.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static DataFrameProto
        parseFrom(java.nio.ByteBuffer data, shade.protobuf.ExtensionRegistryLite extensionRegistry)
            throws shade.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static DataFrameProto
        parseFrom(shade.protobuf.ByteString data)
            throws shade.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static DataFrameProto
        parseFrom(
            shade.protobuf.ByteString data, shade.protobuf.ExtensionRegistryLite extensionRegistry)
            throws shade.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static DataFrameProto
        parseFrom(byte[] data) throws shade.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static DataFrameProto
        parseFrom(byte[] data, shade.protobuf.ExtensionRegistryLite extensionRegistry)
            throws shade.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static DataFrameProto
        parseFrom(java.io.InputStream input) throws java.io.IOException {
      return shade.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
    }

    public static DataFrameProto
        parseFrom(java.io.InputStream input, shade.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return shade.protobuf.GeneratedMessageV3.parseWithIOException(
          PARSER, input, extensionRegistry);
    }

    public static DataFrameProto
        parseDelimitedFrom(java.io.InputStream input) throws java.io.IOException {
      return shade.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
    }

    public static DataFrameProto
        parseDelimitedFrom(
            java.io.InputStream input, shade.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return shade.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
          PARSER, input, extensionRegistry);
    }

    public static DataFrameProto
        parseFrom(shade.protobuf.CodedInputStream input) throws java.io.IOException {
      return shade.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
    }

    public static DataFrameProto
        parseFrom(
            shade.protobuf.CodedInputStream input,
            shade.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return shade.protobuf.GeneratedMessageV3.parseWithIOException(
          PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() {
      return newBuilder();
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }

    public static Builder newBuilder(
        DataFrameProto prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /** Protobuf type {@code DataFrameProto} */
    public static final class Builder extends shade.protobuf.GeneratedMessageV3.Builder<Builder>
        implements
        // @@protoc_insertion_point(builder_implements:DataFrameProto)
        DataFrameProtoOrBuilder {
      public static final shade.protobuf.Descriptors.Descriptor getDescriptor() {
        return QueueServiceProtos
            .internal_static_DataFrameProto_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected shade.protobuf.MapField internalGetMapField(int number) {
        switch (number) {
          case 2:
            return internalGetTags();
          default:
            throw new RuntimeException("Invalid map field number: " + number);
        }
      }

      @SuppressWarnings({"rawtypes"})
      protected shade.protobuf.MapField internalGetMutableMapField(int number) {
        switch (number) {
          case 2:
            return internalGetMutableTags();
          default:
            throw new RuntimeException("Invalid map field number: " + number);
        }
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return QueueServiceProtos
            .internal_static_DataFrameProto_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                DataFrameProto.class,
                Builder
                    .class);
      }

      // Construct using
      // com.aliyun.openservices.eas.predict.proto.QueueServiceProtos.DataFrameProto.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
        if (shade.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders) {}
      }

      public Builder clear() {
        super.clear();
        index_ = 0L;

        internalGetMutableTags().clear();
        data_ = shade.protobuf.ByteString.EMPTY;

        message_ = "";

        return this;
      }

      public shade.protobuf.Descriptors.Descriptor getDescriptorForType() {
        return QueueServiceProtos
            .internal_static_DataFrameProto_descriptor;
      }

      public DataFrameProto
          getDefaultInstanceForType() {
        return DataFrameProto
            .getDefaultInstance();
      }

      public DataFrameProto build() {
        DataFrameProto result =
            buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public DataFrameProto
          buildPartial() {
        DataFrameProto result =
            new DataFrameProto(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.index_ = index_;
        result.tags_ = internalGetTags();
        result.tags_.makeImmutable();
        result.data_ = data_;
        result.message_ = message_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }

      public Builder setField(
          shade.protobuf.Descriptors.FieldDescriptor field, Object value) {
        return (Builder) super.setField(field, value);
      }

      public Builder clearField(shade.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }

      public Builder clearOneof(shade.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }

      public Builder setRepeatedField(
          shade.protobuf.Descriptors.FieldDescriptor field, int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }

      public Builder addRepeatedField(
          shade.protobuf.Descriptors.FieldDescriptor field, Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }

      public Builder mergeFrom(shade.protobuf.Message other) {
        if (other
            instanceof
            DataFrameProto) {
          return mergeFrom(
              (DataFrameProto) other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(
          DataFrameProto other) {
        if (other
            == DataFrameProto
                .getDefaultInstance()) return this;
        if (other.getIndex() != 0L) {
          setIndex(other.getIndex());
        }
        internalGetMutableTags().mergeFrom(other.internalGetTags());
        if (other.getData() != shade.protobuf.ByteString.EMPTY) {
          setData(other.getData());
        }
        if (!other.getMessage().isEmpty()) {
          message_ = other.message_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          shade.protobuf.CodedInputStream input,
          shade.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        DataFrameProto parsedMessage =
            null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (shade.protobuf.InvalidProtocolBufferException e) {
          parsedMessage =
              (DataFrameProto)
                  e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int bitField0_;

      private long index_;
      /** <code>uint64 index = 1;</code> */
      public long getIndex() {
        return index_;
      }
      /** <code>uint64 index = 1;</code> */
      public Builder setIndex(long value) {

        index_ = value;
        onChanged();
        return this;
      }
      /** <code>uint64 index = 1;</code> */
      public Builder clearIndex() {

        index_ = 0L;
        onChanged();
        return this;
      }

      private shade.protobuf.MapField<String, String> tags_;

      private shade.protobuf.MapField<String, String> internalGetTags() {
        if (tags_ == null) {
          return shade.protobuf.MapField.emptyMapField(TagsDefaultEntryHolder.defaultEntry);
        }
        return tags_;
      }

      private shade.protobuf.MapField<String, String> internalGetMutableTags() {
        onChanged();
        ;
        if (tags_ == null) {
          tags_ = shade.protobuf.MapField.newMapField(TagsDefaultEntryHolder.defaultEntry);
        }
        if (!tags_.isMutable()) {
          tags_ = tags_.copy();
        }
        return tags_;
      }

      public int getTagsCount() {
        return internalGetTags().getMap().size();
      }
      /** <code>map&lt;string, string&gt; tags = 2;</code> */
      public boolean containsTags(String key) {
        if (key == null) {
          throw new NullPointerException();
        }
        return internalGetTags().getMap().containsKey(key);
      }
      /** Use {@link #getTagsMap()} instead. */
      @Deprecated
      public java.util.Map<String, String> getTags() {
        return getTagsMap();
      }
      /** <code>map&lt;string, string&gt; tags = 2;</code> */
      public java.util.Map<String, String> getTagsMap() {
        return internalGetTags().getMap();
      }
      /** <code>map&lt;string, string&gt; tags = 2;</code> */
      public String getTagsOrDefault(
          String key, String defaultValue) {
        if (key == null) {
          throw new NullPointerException();
        }
        java.util.Map<String, String> map = internalGetTags().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /** <code>map&lt;string, string&gt; tags = 2;</code> */
      public String getTagsOrThrow(String key) {
        if (key == null) {
          throw new NullPointerException();
        }
        java.util.Map<String, String> map = internalGetTags().getMap();
        if (!map.containsKey(key)) {
          throw new IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearTags() {
        internalGetMutableTags().getMutableMap().clear();
        return this;
      }
      /** <code>map&lt;string, string&gt; tags = 2;</code> */
      public Builder removeTags(String key) {
        if (key == null) {
          throw new NullPointerException();
        }
        internalGetMutableTags().getMutableMap().remove(key);
        return this;
      }
      /** Use alternate mutation accessors instead. */
      @Deprecated
      public java.util.Map<String, String> getMutableTags() {
        return internalGetMutableTags().getMutableMap();
      }
      /** <code>map&lt;string, string&gt; tags = 2;</code> */
      public Builder putTags(String key, String value) {
        if (key == null) {
          throw new NullPointerException();
        }
        if (value == null) {
          throw new NullPointerException();
        }
        internalGetMutableTags().getMutableMap().put(key, value);
        return this;
      }
      /** <code>map&lt;string, string&gt; tags = 2;</code> */
      public Builder putAllTags(java.util.Map<String, String> values) {
        internalGetMutableTags().getMutableMap().putAll(values);
        return this;
      }

      private shade.protobuf.ByteString data_ = shade.protobuf.ByteString.EMPTY;
      /** <code>bytes data = 3;</code> */
      public shade.protobuf.ByteString getData() {
        return data_;
      }
      /** <code>bytes data = 3;</code> */
      public Builder setData(shade.protobuf.ByteString value) {
        if (value == null) {
          throw new NullPointerException();
        }

        data_ = value;
        onChanged();
        return this;
      }
      /** <code>bytes data = 3;</code> */
      public Builder clearData() {

        data_ = getDefaultInstance().getData();
        onChanged();
        return this;
      }

      private Object message_ = "";
      /** <code>string message = 4;</code> */
      public String getMessage() {
        Object ref = message_;
        if (!(ref instanceof String)) {
          shade.protobuf.ByteString bs = (shade.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          message_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /** <code>string message = 4;</code> */
      public shade.protobuf.ByteString getMessageBytes() {
        Object ref = message_;
        if (ref instanceof String) {
          shade.protobuf.ByteString b =
              shade.protobuf.ByteString.copyFromUtf8((String) ref);
          message_ = b;
          return b;
        } else {
          return (shade.protobuf.ByteString) ref;
        }
      }
      /** <code>string message = 4;</code> */
      public Builder setMessage(String value) {
        if (value == null) {
          throw new NullPointerException();
        }

        message_ = value;
        onChanged();
        return this;
      }
      /** <code>string message = 4;</code> */
      public Builder clearMessage() {

        message_ = getDefaultInstance().getMessage();
        onChanged();
        return this;
      }
      /** <code>string message = 4;</code> */
      public Builder setMessageBytes(shade.protobuf.ByteString value) {
        if (value == null) {
          throw new NullPointerException();
        }
        checkByteStringIsUtf8(value);

        message_ = value;
        onChanged();
        return this;
      }

      public final Builder setUnknownFields(final shade.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(final shade.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }

      // @@protoc_insertion_point(builder_scope:DataFrameProto)
    }

    // @@protoc_insertion_point(class_scope:DataFrameProto)
    private static final DataFrameProto
        DEFAULT_INSTANCE;

    static {
      DEFAULT_INSTANCE =
          new DataFrameProto();
    }

    public static DataFrameProto
        getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final shade.protobuf.Parser<DataFrameProto> PARSER =
        new shade.protobuf.AbstractParser<DataFrameProto>() {
          public DataFrameProto parsePartialFrom(
              shade.protobuf.CodedInputStream input,
              shade.protobuf.ExtensionRegistryLite extensionRegistry)
              throws shade.protobuf.InvalidProtocolBufferException {
            return new DataFrameProto(input, extensionRegistry);
          }
        };

    public static shade.protobuf.Parser<DataFrameProto> parser() {
      return PARSER;
    }

    @Override
    public shade.protobuf.Parser<DataFrameProto> getParserForType() {
      return PARSER;
    }

    public DataFrameProto
        getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }
  }

  public interface DataFrameListProtoOrBuilder
      extends
      // @@protoc_insertion_point(interface_extends:DataFrameListProto)
      shade.protobuf.MessageOrBuilder {

    /** <code>repeated .DataFrameProto index = 1;</code> */
    java.util.List<DataFrameProto>
        getIndexList();
    /** <code>repeated .DataFrameProto index = 1;</code> */
    DataFrameProto getIndex(int index);
    /** <code>repeated .DataFrameProto index = 1;</code> */
    int getIndexCount();
    /** <code>repeated .DataFrameProto index = 1;</code> */
    java.util.List<
            ? extends
                DataFrameProtoOrBuilder>
        getIndexOrBuilderList();
    /** <code>repeated .DataFrameProto index = 1;</code> */
    DataFrameProtoOrBuilder
        getIndexOrBuilder(int index);
  }
  /** Protobuf type {@code DataFrameListProto} */
  public static final class DataFrameListProto extends shade.protobuf.GeneratedMessageV3
      implements
      // @@protoc_insertion_point(message_implements:DataFrameListProto)
      DataFrameListProtoOrBuilder {
    private static final long serialVersionUID = 0L;
    // Use DataFrameListProto.newBuilder() to construct.
    private DataFrameListProto(shade.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }

    private DataFrameListProto() {
      index_ = java.util.Collections.emptyList();
    }

    @Override
    public final shade.protobuf.UnknownFieldSet getUnknownFields() {
      return this.unknownFields;
    }

    private DataFrameListProto(
        shade.protobuf.CodedInputStream input,
        shade.protobuf.ExtensionRegistryLite extensionRegistry)
        throws shade.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      shade.protobuf.UnknownFieldSet.Builder unknownFields =
          shade.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default:
              {
                if (!parseUnknownFieldProto3(input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            case 10:
              {
                if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                  index_ =
                      new java.util.ArrayList<
                          DataFrameProto>();
                  mutable_bitField0_ |= 0x00000001;
                }
                index_.add(
                    input.readMessage(
                        DataFrameProto
                            .parser(),
                        extensionRegistry));
                break;
              }
          }
        }
      } catch (shade.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new shade.protobuf.InvalidProtocolBufferException(e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          index_ = java.util.Collections.unmodifiableList(index_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }

    public static final shade.protobuf.Descriptors.Descriptor getDescriptor() {
      return QueueServiceProtos
          .internal_static_DataFrameListProto_descriptor;
    }

    protected FieldAccessorTable internalGetFieldAccessorTable() {
      return QueueServiceProtos
          .internal_static_DataFrameListProto_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              DataFrameListProto.class,
              Builder.class);
    }

    public static final int INDEX_FIELD_NUMBER = 1;
    private java.util.List<
            DataFrameProto>
        index_;
    /** <code>repeated .DataFrameProto index = 1;</code> */
    public java.util.List<
            DataFrameProto>
        getIndexList() {
      return index_;
    }
    /** <code>repeated .DataFrameProto index = 1;</code> */
    public java.util.List<
            ? extends
                DataFrameProtoOrBuilder>
        getIndexOrBuilderList() {
      return index_;
    }
    /** <code>repeated .DataFrameProto index = 1;</code> */
    public int getIndexCount() {
      return index_.size();
    }
    /** <code>repeated .DataFrameProto index = 1;</code> */
    public DataFrameProto getIndex(
        int index) {
      return index_.get(index);
    }
    /** <code>repeated .DataFrameProto index = 1;</code> */
    public DataFrameProtoOrBuilder
        getIndexOrBuilder(int index) {
      return index_.get(index);
    }

    private byte memoizedIsInitialized = -1;

    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(shade.protobuf.CodedOutputStream output) throws java.io.IOException {
      for (int i = 0; i < index_.size(); i++) {
        output.writeMessage(1, index_.get(i));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < index_.size(); i++) {
        size += shade.protobuf.CodedOutputStream.computeMessageSize(1, index_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
        return true;
      }
      if (!(obj
          instanceof
          DataFrameListProto)) {
        return super.equals(obj);
      }
      DataFrameListProto other =
          (DataFrameListProto) obj;

      boolean result = true;
      result = result && getIndexList().equals(other.getIndexList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getIndexCount() > 0) {
        hash = (37 * hash) + INDEX_FIELD_NUMBER;
        hash = (53 * hash) + getIndexList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static DataFrameListProto
        parseFrom(java.nio.ByteBuffer data) throws shade.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static DataFrameListProto
        parseFrom(java.nio.ByteBuffer data, shade.protobuf.ExtensionRegistryLite extensionRegistry)
            throws shade.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static DataFrameListProto
        parseFrom(shade.protobuf.ByteString data)
            throws shade.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static DataFrameListProto
        parseFrom(
            shade.protobuf.ByteString data, shade.protobuf.ExtensionRegistryLite extensionRegistry)
            throws shade.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static DataFrameListProto
        parseFrom(byte[] data) throws shade.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static DataFrameListProto
        parseFrom(byte[] data, shade.protobuf.ExtensionRegistryLite extensionRegistry)
            throws shade.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static DataFrameListProto
        parseFrom(java.io.InputStream input) throws java.io.IOException {
      return shade.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
    }

    public static DataFrameListProto
        parseFrom(java.io.InputStream input, shade.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return shade.protobuf.GeneratedMessageV3.parseWithIOException(
          PARSER, input, extensionRegistry);
    }

    public static DataFrameListProto
        parseDelimitedFrom(java.io.InputStream input) throws java.io.IOException {
      return shade.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
    }

    public static DataFrameListProto
        parseDelimitedFrom(
            java.io.InputStream input, shade.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return shade.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
          PARSER, input, extensionRegistry);
    }

    public static DataFrameListProto
        parseFrom(shade.protobuf.CodedInputStream input) throws java.io.IOException {
      return shade.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
    }

    public static DataFrameListProto
        parseFrom(
            shade.protobuf.CodedInputStream input,
            shade.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return shade.protobuf.GeneratedMessageV3.parseWithIOException(
          PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() {
      return newBuilder();
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }

    public static Builder newBuilder(
        DataFrameListProto prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /** Protobuf type {@code DataFrameListProto} */
    public static final class Builder extends shade.protobuf.GeneratedMessageV3.Builder<Builder>
        implements
        // @@protoc_insertion_point(builder_implements:DataFrameListProto)
        DataFrameListProtoOrBuilder {
      public static final shade.protobuf.Descriptors.Descriptor getDescriptor() {
        return QueueServiceProtos
            .internal_static_DataFrameListProto_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return QueueServiceProtos
            .internal_static_DataFrameListProto_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                DataFrameListProto
                    .class,
                Builder.class);
      }

      // Construct using
      // com.aliyun.openservices.eas.predict.proto.QueueServiceProtos.DataFrameListProto.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
        if (shade.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders) {
          getIndexFieldBuilder();
        }
      }

      public Builder clear() {
        super.clear();
        if (indexBuilder_ == null) {
          index_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          indexBuilder_.clear();
        }
        return this;
      }

      public shade.protobuf.Descriptors.Descriptor getDescriptorForType() {
        return QueueServiceProtos
            .internal_static_DataFrameListProto_descriptor;
      }

      public DataFrameListProto
          getDefaultInstanceForType() {
        return DataFrameListProto
            .getDefaultInstance();
      }

      public DataFrameListProto
          build() {
        DataFrameListProto result =
            buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public DataFrameListProto
          buildPartial() {
        DataFrameListProto result =
            new DataFrameListProto(
                this);
        int from_bitField0_ = bitField0_;
        if (indexBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            index_ = java.util.Collections.unmodifiableList(index_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.index_ = index_;
        } else {
          result.index_ = indexBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }

      public Builder setField(
          shade.protobuf.Descriptors.FieldDescriptor field, Object value) {
        return (Builder) super.setField(field, value);
      }

      public Builder clearField(shade.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }

      public Builder clearOneof(shade.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }

      public Builder setRepeatedField(
          shade.protobuf.Descriptors.FieldDescriptor field, int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }

      public Builder addRepeatedField(
          shade.protobuf.Descriptors.FieldDescriptor field, Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }

      public Builder mergeFrom(shade.protobuf.Message other) {
        if (other
            instanceof
            DataFrameListProto) {
          return mergeFrom(
              (DataFrameListProto)
                  other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(
          DataFrameListProto other) {
        if (other
            == DataFrameListProto
                .getDefaultInstance()) return this;
        if (indexBuilder_ == null) {
          if (!other.index_.isEmpty()) {
            if (index_.isEmpty()) {
              index_ = other.index_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureIndexIsMutable();
              index_.addAll(other.index_);
            }
            onChanged();
          }
        } else {
          if (!other.index_.isEmpty()) {
            if (indexBuilder_.isEmpty()) {
              indexBuilder_.dispose();
              indexBuilder_ = null;
              index_ = other.index_;
              bitField0_ = (bitField0_ & ~0x00000001);
              indexBuilder_ =
                  shade.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders
                      ? getIndexFieldBuilder()
                      : null;
            } else {
              indexBuilder_.addAllMessages(other.index_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          shade.protobuf.CodedInputStream input,
          shade.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        DataFrameListProto
            parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (shade.protobuf.InvalidProtocolBufferException e) {
          parsedMessage =
              (DataFrameListProto)
                  e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int bitField0_;

      private java.util.List<
              DataFrameProto>
          index_ = java.util.Collections.emptyList();

      private void ensureIndexIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          index_ =
              new java.util.ArrayList<
                  DataFrameProto>(
                  index_);
          bitField0_ |= 0x00000001;
        }
      }

      private shade.protobuf.RepeatedFieldBuilderV3<
              DataFrameProto,
              DataFrameProto.Builder,
              DataFrameProtoOrBuilder>
          indexBuilder_;

      /** <code>repeated .DataFrameProto index = 1;</code> */
      public java.util.List<
              DataFrameProto>
          getIndexList() {
        if (indexBuilder_ == null) {
          return java.util.Collections.unmodifiableList(index_);
        } else {
          return indexBuilder_.getMessageList();
        }
      }
      /** <code>repeated .DataFrameProto index = 1;</code> */
      public int getIndexCount() {
        if (indexBuilder_ == null) {
          return index_.size();
        } else {
          return indexBuilder_.getCount();
        }
      }
      /** <code>repeated .DataFrameProto index = 1;</code> */
      public DataFrameProto getIndex(
          int index) {
        if (indexBuilder_ == null) {
          return index_.get(index);
        } else {
          return indexBuilder_.getMessage(index);
        }
      }
      /** <code>repeated .DataFrameProto index = 1;</code> */
      public Builder setIndex(
          int index,
          DataFrameProto value) {
        if (indexBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureIndexIsMutable();
          index_.set(index, value);
          onChanged();
        } else {
          indexBuilder_.setMessage(index, value);
        }
        return this;
      }
      /** <code>repeated .DataFrameProto index = 1;</code> */
      public Builder setIndex(
          int index,
          DataFrameProto.Builder
              builderForValue) {
        if (indexBuilder_ == null) {
          ensureIndexIsMutable();
          index_.set(index, builderForValue.build());
          onChanged();
        } else {
          indexBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /** <code>repeated .DataFrameProto index = 1;</code> */
      public Builder addIndex(
          DataFrameProto value) {
        if (indexBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureIndexIsMutable();
          index_.add(value);
          onChanged();
        } else {
          indexBuilder_.addMessage(value);
        }
        return this;
      }
      /** <code>repeated .DataFrameProto index = 1;</code> */
      public Builder addIndex(
          int index,
          DataFrameProto value) {
        if (indexBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureIndexIsMutable();
          index_.add(index, value);
          onChanged();
        } else {
          indexBuilder_.addMessage(index, value);
        }
        return this;
      }
      /** <code>repeated .DataFrameProto index = 1;</code> */
      public Builder addIndex(
          DataFrameProto.Builder
              builderForValue) {
        if (indexBuilder_ == null) {
          ensureIndexIsMutable();
          index_.add(builderForValue.build());
          onChanged();
        } else {
          indexBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /** <code>repeated .DataFrameProto index = 1;</code> */
      public Builder addIndex(
          int index,
          DataFrameProto.Builder
              builderForValue) {
        if (indexBuilder_ == null) {
          ensureIndexIsMutable();
          index_.add(index, builderForValue.build());
          onChanged();
        } else {
          indexBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /** <code>repeated .DataFrameProto index = 1;</code> */
      public Builder addAllIndex(
          Iterable<
                  ? extends
                      DataFrameProto>
              values) {
        if (indexBuilder_ == null) {
          ensureIndexIsMutable();
          shade.protobuf.AbstractMessageLite.Builder.addAll(values, index_);
          onChanged();
        } else {
          indexBuilder_.addAllMessages(values);
        }
        return this;
      }
      /** <code>repeated .DataFrameProto index = 1;</code> */
      public Builder clearIndex() {
        if (indexBuilder_ == null) {
          index_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          indexBuilder_.clear();
        }
        return this;
      }
      /** <code>repeated .DataFrameProto index = 1;</code> */
      public Builder removeIndex(int index) {
        if (indexBuilder_ == null) {
          ensureIndexIsMutable();
          index_.remove(index);
          onChanged();
        } else {
          indexBuilder_.remove(index);
        }
        return this;
      }
      /** <code>repeated .DataFrameProto index = 1;</code> */
      public DataFrameProto.Builder
          getIndexBuilder(int index) {
        return getIndexFieldBuilder().getBuilder(index);
      }
      /** <code>repeated .DataFrameProto index = 1;</code> */
      public DataFrameProtoOrBuilder
          getIndexOrBuilder(int index) {
        if (indexBuilder_ == null) {
          return index_.get(index);
        } else {
          return indexBuilder_.getMessageOrBuilder(index);
        }
      }
      /** <code>repeated .DataFrameProto index = 1;</code> */
      public java.util.List<
              ? extends
                  DataFrameProtoOrBuilder>
          getIndexOrBuilderList() {
        if (indexBuilder_ != null) {
          return indexBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(index_);
        }
      }
      /** <code>repeated .DataFrameProto index = 1;</code> */
      public DataFrameProto.Builder
          addIndexBuilder() {
        return getIndexFieldBuilder()
            .addBuilder(
                DataFrameProto
                    .getDefaultInstance());
      }
      /** <code>repeated .DataFrameProto index = 1;</code> */
      public DataFrameProto.Builder
          addIndexBuilder(int index) {
        return getIndexFieldBuilder()
            .addBuilder(
                index,
                DataFrameProto
                    .getDefaultInstance());
      }
      /** <code>repeated .DataFrameProto index = 1;</code> */
      public java.util.List<
              DataFrameProto.Builder>
          getIndexBuilderList() {
        return getIndexFieldBuilder().getBuilderList();
      }

      private shade.protobuf.RepeatedFieldBuilderV3<
              DataFrameProto,
              DataFrameProto.Builder,
              DataFrameProtoOrBuilder>
          getIndexFieldBuilder() {
        if (indexBuilder_ == null) {
          indexBuilder_ =
              new shade.protobuf.RepeatedFieldBuilderV3<
                  DataFrameProto,
                  DataFrameProto
                      .Builder,
                  DataFrameProtoOrBuilder>(
                  index_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          index_ = null;
        }
        return indexBuilder_;
      }

      public final Builder setUnknownFields(final shade.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(final shade.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }

      // @@protoc_insertion_point(builder_scope:DataFrameListProto)
    }

    // @@protoc_insertion_point(class_scope:DataFrameListProto)
    private static final DataFrameListProto
        DEFAULT_INSTANCE;

    static {
      DEFAULT_INSTANCE =
          new DataFrameListProto();
    }

    public static DataFrameListProto
        getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final shade.protobuf.Parser<DataFrameListProto> PARSER =
        new shade.protobuf.AbstractParser<DataFrameListProto>() {
          public DataFrameListProto parsePartialFrom(
              shade.protobuf.CodedInputStream input,
              shade.protobuf.ExtensionRegistryLite extensionRegistry)
              throws shade.protobuf.InvalidProtocolBufferException {
            return new DataFrameListProto(input, extensionRegistry);
          }
        };

    public static shade.protobuf.Parser<DataFrameListProto> parser() {
      return PARSER;
    }

    @Override
    public shade.protobuf.Parser<DataFrameListProto> getParserForType() {
      return PARSER;
    }

    public DataFrameListProto
        getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }
  }

  public interface AttributesProtoOrBuilder
      extends
      // @@protoc_insertion_point(interface_extends:AttributesProto)
      shade.protobuf.MessageOrBuilder {

    /** <code>map&lt;string, string&gt; attributes = 1;</code> */
    int getAttributesCount();
    /** <code>map&lt;string, string&gt; attributes = 1;</code> */
    boolean containsAttributes(String key);
    /** Use {@link #getAttributesMap()} instead. */
    @Deprecated
    java.util.Map<String, String> getAttributes();
    /** <code>map&lt;string, string&gt; attributes = 1;</code> */
    java.util.Map<String, String> getAttributesMap();
    /** <code>map&lt;string, string&gt; attributes = 1;</code> */
    String getAttributesOrDefault(String key, String defaultValue);
    /** <code>map&lt;string, string&gt; attributes = 1;</code> */
    String getAttributesOrThrow(String key);
  }
  /** Protobuf type {@code AttributesProto} */
  public static final class AttributesProto extends shade.protobuf.GeneratedMessageV3
      implements
      // @@protoc_insertion_point(message_implements:AttributesProto)
      AttributesProtoOrBuilder {
    private static final long serialVersionUID = 0L;
    // Use AttributesProto.newBuilder() to construct.
    private AttributesProto(shade.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }

    private AttributesProto() {}

    @Override
    public final shade.protobuf.UnknownFieldSet getUnknownFields() {
      return this.unknownFields;
    }

    private AttributesProto(
        shade.protobuf.CodedInputStream input,
        shade.protobuf.ExtensionRegistryLite extensionRegistry)
        throws shade.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      shade.protobuf.UnknownFieldSet.Builder unknownFields =
          shade.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default:
              {
                if (!parseUnknownFieldProto3(input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            case 10:
              {
                if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                  attributes_ =
                      shade.protobuf.MapField.newMapField(
                          AttributesDefaultEntryHolder.defaultEntry);
                  mutable_bitField0_ |= 0x00000001;
                }
                shade.protobuf.MapEntry<String, String> attributes__ =
                    input.readMessage(
                        AttributesDefaultEntryHolder.defaultEntry.getParserForType(),
                        extensionRegistry);
                attributes_.getMutableMap().put(attributes__.getKey(), attributes__.getValue());
                break;
              }
          }
        }
      } catch (shade.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new shade.protobuf.InvalidProtocolBufferException(e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }

    public static final shade.protobuf.Descriptors.Descriptor getDescriptor() {
      return QueueServiceProtos
          .internal_static_AttributesProto_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    protected shade.protobuf.MapField internalGetMapField(int number) {
      switch (number) {
        case 1:
          return internalGetAttributes();
        default:
          throw new RuntimeException("Invalid map field number: " + number);
      }
    }

    protected FieldAccessorTable internalGetFieldAccessorTable() {
      return QueueServiceProtos
          .internal_static_AttributesProto_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              AttributesProto.class,
              Builder
                  .class);
    }

    public static final int ATTRIBUTES_FIELD_NUMBER = 1;

    private static final class AttributesDefaultEntryHolder {
      static final shade.protobuf.MapEntry<String, String> defaultEntry =
          shade.protobuf.MapEntry.<String, String>newDefaultInstance(
              QueueServiceProtos
                  .internal_static_AttributesProto_AttributesEntry_descriptor,
              shade.protobuf.WireFormat.FieldType.STRING,
              "",
              shade.protobuf.WireFormat.FieldType.STRING,
              "");
    }

    private shade.protobuf.MapField<String, String> attributes_;

    private shade.protobuf.MapField<String, String> internalGetAttributes() {
      if (attributes_ == null) {
        return shade.protobuf.MapField.emptyMapField(AttributesDefaultEntryHolder.defaultEntry);
      }
      return attributes_;
    }

    public int getAttributesCount() {
      return internalGetAttributes().getMap().size();
    }
    /** <code>map&lt;string, string&gt; attributes = 1;</code> */
    public boolean containsAttributes(String key) {
      if (key == null) {
        throw new NullPointerException();
      }
      return internalGetAttributes().getMap().containsKey(key);
    }
    /** Use {@link #getAttributesMap()} instead. */
    @Deprecated
    public java.util.Map<String, String> getAttributes() {
      return getAttributesMap();
    }
    /** <code>map&lt;string, string&gt; attributes = 1;</code> */
    public java.util.Map<String, String> getAttributesMap() {
      return internalGetAttributes().getMap();
    }
    /** <code>map&lt;string, string&gt; attributes = 1;</code> */
    public String getAttributesOrDefault(
        String key, String defaultValue) {
      if (key == null) {
        throw new NullPointerException();
      }
      java.util.Map<String, String> map = internalGetAttributes().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /** <code>map&lt;string, string&gt; attributes = 1;</code> */
    public String getAttributesOrThrow(String key) {
      if (key == null) {
        throw new NullPointerException();
      }
      java.util.Map<String, String> map = internalGetAttributes().getMap();
      if (!map.containsKey(key)) {
        throw new IllegalArgumentException();
      }
      return map.get(key);
    }

    private byte memoizedIsInitialized = -1;

    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(shade.protobuf.CodedOutputStream output) throws java.io.IOException {
      shade.protobuf.GeneratedMessageV3.serializeStringMapTo(
          output, internalGetAttributes(), AttributesDefaultEntryHolder.defaultEntry, 1);
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (java.util.Map.Entry<String, String> entry :
          internalGetAttributes().getMap().entrySet()) {
        shade.protobuf.MapEntry<String, String> attributes__ =
            AttributesDefaultEntryHolder.defaultEntry
                .newBuilderForType()
                .setKey(entry.getKey())
                .setValue(entry.getValue())
                .build();
        size += shade.protobuf.CodedOutputStream.computeMessageSize(1, attributes__);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
        return true;
      }
      if (!(obj
          instanceof
          AttributesProto)) {
        return super.equals(obj);
      }
      AttributesProto other =
          (AttributesProto) obj;

      boolean result = true;
      result = result && internalGetAttributes().equals(other.internalGetAttributes());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (!internalGetAttributes().getMap().isEmpty()) {
        hash = (37 * hash) + ATTRIBUTES_FIELD_NUMBER;
        hash = (53 * hash) + internalGetAttributes().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static AttributesProto
        parseFrom(java.nio.ByteBuffer data) throws shade.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static AttributesProto
        parseFrom(java.nio.ByteBuffer data, shade.protobuf.ExtensionRegistryLite extensionRegistry)
            throws shade.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static AttributesProto
        parseFrom(shade.protobuf.ByteString data)
            throws shade.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static AttributesProto
        parseFrom(
            shade.protobuf.ByteString data, shade.protobuf.ExtensionRegistryLite extensionRegistry)
            throws shade.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static AttributesProto
        parseFrom(byte[] data) throws shade.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static AttributesProto
        parseFrom(byte[] data, shade.protobuf.ExtensionRegistryLite extensionRegistry)
            throws shade.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static AttributesProto
        parseFrom(java.io.InputStream input) throws java.io.IOException {
      return shade.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
    }

    public static AttributesProto
        parseFrom(java.io.InputStream input, shade.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return shade.protobuf.GeneratedMessageV3.parseWithIOException(
          PARSER, input, extensionRegistry);
    }

    public static AttributesProto
        parseDelimitedFrom(java.io.InputStream input) throws java.io.IOException {
      return shade.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
    }

    public static AttributesProto
        parseDelimitedFrom(
            java.io.InputStream input, shade.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return shade.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
          PARSER, input, extensionRegistry);
    }

    public static AttributesProto
        parseFrom(shade.protobuf.CodedInputStream input) throws java.io.IOException {
      return shade.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
    }

    public static AttributesProto
        parseFrom(
            shade.protobuf.CodedInputStream input,
            shade.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return shade.protobuf.GeneratedMessageV3.parseWithIOException(
          PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() {
      return newBuilder();
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }

    public static Builder newBuilder(
        AttributesProto prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /** Protobuf type {@code AttributesProto} */
    public static final class Builder extends shade.protobuf.GeneratedMessageV3.Builder<Builder>
        implements
        // @@protoc_insertion_point(builder_implements:AttributesProto)
        AttributesProtoOrBuilder {
      public static final shade.protobuf.Descriptors.Descriptor getDescriptor() {
        return QueueServiceProtos
            .internal_static_AttributesProto_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected shade.protobuf.MapField internalGetMapField(int number) {
        switch (number) {
          case 1:
            return internalGetAttributes();
          default:
            throw new RuntimeException("Invalid map field number: " + number);
        }
      }

      @SuppressWarnings({"rawtypes"})
      protected shade.protobuf.MapField internalGetMutableMapField(int number) {
        switch (number) {
          case 1:
            return internalGetMutableAttributes();
          default:
            throw new RuntimeException("Invalid map field number: " + number);
        }
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return QueueServiceProtos
            .internal_static_AttributesProto_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                AttributesProto.class,
                Builder
                    .class);
      }

      // Construct using
      // com.aliyun.openservices.eas.predict.proto.QueueServiceProtos.AttributesProto.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
        if (shade.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders) {}
      }

      public Builder clear() {
        super.clear();
        internalGetMutableAttributes().clear();
        return this;
      }

      public shade.protobuf.Descriptors.Descriptor getDescriptorForType() {
        return QueueServiceProtos
            .internal_static_AttributesProto_descriptor;
      }

      public AttributesProto
          getDefaultInstanceForType() {
        return AttributesProto
            .getDefaultInstance();
      }

      public AttributesProto build() {
        AttributesProto result =
            buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public AttributesProto
          buildPartial() {
        AttributesProto result =
            new AttributesProto(this);
        int from_bitField0_ = bitField0_;
        result.attributes_ = internalGetAttributes();
        result.attributes_.makeImmutable();
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }

      public Builder setField(
          shade.protobuf.Descriptors.FieldDescriptor field, Object value) {
        return (Builder) super.setField(field, value);
      }

      public Builder clearField(shade.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }

      public Builder clearOneof(shade.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }

      public Builder setRepeatedField(
          shade.protobuf.Descriptors.FieldDescriptor field, int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }

      public Builder addRepeatedField(
          shade.protobuf.Descriptors.FieldDescriptor field, Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }

      public Builder mergeFrom(shade.protobuf.Message other) {
        if (other
            instanceof
            AttributesProto) {
          return mergeFrom(
              (AttributesProto) other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(
          AttributesProto other) {
        if (other
            == AttributesProto
                .getDefaultInstance()) return this;
        internalGetMutableAttributes().mergeFrom(other.internalGetAttributes());
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          shade.protobuf.CodedInputStream input,
          shade.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        AttributesProto parsedMessage =
            null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (shade.protobuf.InvalidProtocolBufferException e) {
          parsedMessage =
              (AttributesProto)
                  e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int bitField0_;

      private shade.protobuf.MapField<String, String> attributes_;

      private shade.protobuf.MapField<String, String> internalGetAttributes() {
        if (attributes_ == null) {
          return shade.protobuf.MapField.emptyMapField(AttributesDefaultEntryHolder.defaultEntry);
        }
        return attributes_;
      }

      private shade.protobuf.MapField<String, String>
          internalGetMutableAttributes() {
        onChanged();
        ;
        if (attributes_ == null) {
          attributes_ =
              shade.protobuf.MapField.newMapField(AttributesDefaultEntryHolder.defaultEntry);
        }
        if (!attributes_.isMutable()) {
          attributes_ = attributes_.copy();
        }
        return attributes_;
      }

      public int getAttributesCount() {
        return internalGetAttributes().getMap().size();
      }
      /** <code>map&lt;string, string&gt; attributes = 1;</code> */
      public boolean containsAttributes(String key) {
        if (key == null) {
          throw new NullPointerException();
        }
        return internalGetAttributes().getMap().containsKey(key);
      }
      /** Use {@link #getAttributesMap()} instead. */
      @Deprecated
      public java.util.Map<String, String> getAttributes() {
        return getAttributesMap();
      }
      /** <code>map&lt;string, string&gt; attributes = 1;</code> */
      public java.util.Map<String, String> getAttributesMap() {
        return internalGetAttributes().getMap();
      }
      /** <code>map&lt;string, string&gt; attributes = 1;</code> */
      public String getAttributesOrDefault(
          String key, String defaultValue) {
        if (key == null) {
          throw new NullPointerException();
        }
        java.util.Map<String, String> map = internalGetAttributes().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /** <code>map&lt;string, string&gt; attributes = 1;</code> */
      public String getAttributesOrThrow(String key) {
        if (key == null) {
          throw new NullPointerException();
        }
        java.util.Map<String, String> map = internalGetAttributes().getMap();
        if (!map.containsKey(key)) {
          throw new IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearAttributes() {
        internalGetMutableAttributes().getMutableMap().clear();
        return this;
      }
      /** <code>map&lt;string, string&gt; attributes = 1;</code> */
      public Builder removeAttributes(String key) {
        if (key == null) {
          throw new NullPointerException();
        }
        internalGetMutableAttributes().getMutableMap().remove(key);
        return this;
      }
      /** Use alternate mutation accessors instead. */
      @Deprecated
      public java.util.Map<String, String> getMutableAttributes() {
        return internalGetMutableAttributes().getMutableMap();
      }
      /** <code>map&lt;string, string&gt; attributes = 1;</code> */
      public Builder putAttributes(String key, String value) {
        if (key == null) {
          throw new NullPointerException();
        }
        if (value == null) {
          throw new NullPointerException();
        }
        internalGetMutableAttributes().getMutableMap().put(key, value);
        return this;
      }
      /** <code>map&lt;string, string&gt; attributes = 1;</code> */
      public Builder putAllAttributes(java.util.Map<String, String> values) {
        internalGetMutableAttributes().getMutableMap().putAll(values);
        return this;
      }

      public final Builder setUnknownFields(final shade.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(final shade.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }

      // @@protoc_insertion_point(builder_scope:AttributesProto)
    }

    // @@protoc_insertion_point(class_scope:AttributesProto)
    private static final AttributesProto
        DEFAULT_INSTANCE;

    static {
      DEFAULT_INSTANCE =
          new AttributesProto();
    }

    public static AttributesProto
        getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final shade.protobuf.Parser<AttributesProto> PARSER =
        new shade.protobuf.AbstractParser<AttributesProto>() {
          public AttributesProto parsePartialFrom(
              shade.protobuf.CodedInputStream input,
              shade.protobuf.ExtensionRegistryLite extensionRegistry)
              throws shade.protobuf.InvalidProtocolBufferException {
            return new AttributesProto(input, extensionRegistry);
          }
        };

    public static shade.protobuf.Parser<AttributesProto> parser() {
      return PARSER;
    }

    @Override
    public shade.protobuf.Parser<AttributesProto> getParserForType() {
      return PARSER;
    }

    public AttributesProto
        getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }
  }

  private static final shade.protobuf.Descriptors.Descriptor
      internal_static_DataFrameProto_descriptor;
  private static final shade.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_DataFrameProto_fieldAccessorTable;
  private static final shade.protobuf.Descriptors.Descriptor
      internal_static_DataFrameProto_TagsEntry_descriptor;
  private static final shade.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_DataFrameProto_TagsEntry_fieldAccessorTable;
  private static final shade.protobuf.Descriptors.Descriptor
      internal_static_DataFrameListProto_descriptor;
  private static final shade.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_DataFrameListProto_fieldAccessorTable;
  private static final shade.protobuf.Descriptors.Descriptor
      internal_static_AttributesProto_descriptor;
  private static final shade.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_AttributesProto_fieldAccessorTable;
  private static final shade.protobuf.Descriptors.Descriptor
      internal_static_AttributesProto_AttributesEntry_descriptor;
  private static final shade.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_AttributesProto_AttributesEntry_fieldAccessorTable;

  public static shade.protobuf.Descriptors.FileDescriptor getDescriptor() {
    return descriptor;
  }

  private static shade.protobuf.Descriptors.FileDescriptor descriptor;

  static {
    String[] descriptorData = {
      "\n\023queue_service.proto\"\224\001\n\016DataFrameProto"
          + "\022\r\n\005index\030\001 \001(\004\022\'\n\004tags\030\002 \003(\0132\031.DataFram"
          + "eProto.TagsEntry\022\014\n\004data\030\003 \001(\014\022\017\n\007messag"
          + "e\030\004 \001(\t\032+\n\tTagsEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005val"
          + "ue\030\002 \001(\t:\0028\001\"4\n\022DataFrameListProto\022\036\n\005in"
          + "dex\030\001 \003(\0132\017.DataFrameProto\"z\n\017Attributes"
          + "Proto\0224\n\nattributes\030\001 \003(\0132 .AttributesPr"
          + "oto.AttributesEntry\0321\n\017AttributesEntry\022\013"
          + "\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001BB\n)com.al"
          + "iyun.openservices.eas.predict.protoB\022Que",
      "ueServiceProtos\370\001\001b\006proto3"
    };
    shade.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new shade.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
          public shade.protobuf.ExtensionRegistry assignDescriptors(
              shade.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    shade.protobuf.Descriptors.FileDescriptor.internalBuildGeneratedFileFrom(
        descriptorData, new shade.protobuf.Descriptors.FileDescriptor[] {}, assigner);
    internal_static_DataFrameProto_descriptor = getDescriptor().getMessageTypes().get(0);
    internal_static_DataFrameProto_fieldAccessorTable =
        new shade.protobuf.GeneratedMessageV3.FieldAccessorTable(
            internal_static_DataFrameProto_descriptor,
            new String[] {
              "Index", "Tags", "Data", "Message",
            });
    internal_static_DataFrameProto_TagsEntry_descriptor =
        internal_static_DataFrameProto_descriptor.getNestedTypes().get(0);
    internal_static_DataFrameProto_TagsEntry_fieldAccessorTable =
        new shade.protobuf.GeneratedMessageV3.FieldAccessorTable(
            internal_static_DataFrameProto_TagsEntry_descriptor,
            new String[] {
              "Key", "Value",
            });
    internal_static_DataFrameListProto_descriptor = getDescriptor().getMessageTypes().get(1);
    internal_static_DataFrameListProto_fieldAccessorTable =
        new shade.protobuf.GeneratedMessageV3.FieldAccessorTable(
            internal_static_DataFrameListProto_descriptor,
            new String[] {
              "Index",
            });
    internal_static_AttributesProto_descriptor = getDescriptor().getMessageTypes().get(2);
    internal_static_AttributesProto_fieldAccessorTable =
        new shade.protobuf.GeneratedMessageV3.FieldAccessorTable(
            internal_static_AttributesProto_descriptor,
            new String[] {
              "Attributes",
            });
    internal_static_AttributesProto_AttributesEntry_descriptor =
        internal_static_AttributesProto_descriptor.getNestedTypes().get(0);
    internal_static_AttributesProto_AttributesEntry_fieldAccessorTable =
        new shade.protobuf.GeneratedMessageV3.FieldAccessorTable(
            internal_static_AttributesProto_AttributesEntry_descriptor,
            new String[] {
              "Key", "Value",
            });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
